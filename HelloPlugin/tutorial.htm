<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir="ltr" lang="en"><head><title>Plugin Tutorial - BukkitWiki</title> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="generator" content="MediaWiki 1.16.2"><link rel="shortcut icon" href="http://wiki.bukkit.org/favicon.ico"><link rel="search" type="application/opensearchdescription+xml" href="http://wiki.bukkit.org/opensearch_desc.php" title="BukkitWiki (en)"><link rel="alternate" type="application/atom+xml" title="BukkitWiki Atom feed" href="http://wiki.bukkit.org/index.php?title=Special:RecentChanges&amp;feed=atom"><style media="screen" style="display:none">/**//**/html,body{height:100%;margin:0;padding:0;font-family:sans-serif;font-size:1em;}body{background-color:#f3f3f3;background-image:url(http://wiki.bukkit.org/skins/vector/images/page-base.png);}/**/#content{margin-left:10em;padding:1em;background-image:url(http://wiki.bukkit.org/skins/vector/images/border.png);background-position:top left;background-repeat:repeat-y;background-color:white;}/**/#mw-page-base{height:5em;background-color:white;background-image:url(http://wiki.bukkit.org/skins/vector/images/page-fade.png);background-position:bottom left;background-repeat:repeat-x;}#mw-head-base{margin-top:-5em;margin-left:10em;height:5em;background-image:url(http://wiki.bukkit.org/skins/vector/images/border.png);background-position:bottom left;background-repeat:repeat-x;}#mw-head{position:absolute;top:0;right:0;width:100%;}#mw-head h5{margin:0;padding:0;}/**/div.emptyPortlet{display:none;}/**/#p-personal{position:absolute;top:0;margin-left:10em;right:0.75em;}#p-personal h5{display:none;}#p-personal ul{list-style:none;margin:0;padding:0;}/**/#p-personal li{line-height:1.125em;float:left;}#p-personal li{margin-left:0.75em;margin-top:0.5em;font-size:0.75em;}/**/#left-navigation{position:absolute;left:10em;top:2.5em;}#right-navigation{float:right;margin-top:2.5em;}/**/div.vectorTabs h5,div.vectorMenu h5 span{display:none;}/**//**/div.vectorTabs{float:left;}div.vectorTabs{background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-break.png);background-position:bottom left;background-repeat:no-repeat;padding-left:1px;}/**/div.vectorTabs ul{float:left;}div.vectorTabs ul{height:100%;list-style:none;margin:0;padding:0;}/**/div.vectorTabs ul li{float:left;}/**/div.vectorTabs ul li{line-height:1.125em;display:inline-block;height:100%;margin:0;padding:0;background-color:#f3f3f3;background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-normal-fade.png);background-position:bottom left;background-repeat:repeat-x;white-space:nowrap;}/**/div.vectorTabs ul>li{display:block;}div.vectorTabs li.selected{background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-current-fade.png);}/**/div.vectorTabs li a{display:inline-block;height:2.5em;padding-left:0.4em;padding-right:0.4em;background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-break.png);background-position:bottom right;background-repeat:no-repeat;}div.vectorTabs li a,div.vectorTabs li a span{color:#0645ad;cursor:pointer;}div.vectorTabs li a span{font-size:0.8em;}/**/div.vectorTabs li>a{display:block;}/**/div.vectorTabs a span{display:inline-block;padding-top:1.25em;}/**//**/div.vectorTabs a>span{float:left;display:block;}div.vectorTabs li.selected a,div.vectorTabs li.selected a span,div.vectorTabs li.selected a:visited div.vectorTabs li.selected a:visited span{color:#333333;text-decoration:none;}div.vectorTabs li.new a,div.vectorTabs li.new a span,div.vectorTabs li.new a:visited,div.vectorTabs li.new a:visited span{color:#a55858;}/**//**/div.vectorMenu{direction:ltr;float:left;background-image:url(http://wiki.bukkit.org/skins/vector/images/arrow-down-icon.png);background-position:center center;background-repeat:no-repeat;}/**/body.rtl div.vectorMenu{direction:rtl;}/**//**/#mw-head div.vectorMenu h5{float:left;background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-break.png);background-repeat:no-repeat;}/**/#mw-head div.vectorMenu>h5{background-image:none;}#mw-head div.vectorMenu h5{background-position:bottom left;margin-left:-1px;}/**//**/div.vectorMenu h5 a{display:inline-block;width:24px;height:2.5em;text-decoration:none;background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-break.png);background-repeat:no-repeat;}div.vectorMenu h5 a{background-position:bottom right;}/**/div.vectorMenu h5>a{display:block;}div.vectorMenu div.menu{position:relative;display:none;clear:both;text-align:left;}/**//**/body.rtl div.vectorMenu div.menu{margin-left:24px;}/**//**/body.rtl div.vectorMenu>div.menu{margin-left:auto;}/**//**/body.rtl div.vectorMenu>div.menu,x:-moz-any-link{margin-left:23px;}div.vectorMenu:hover div.menu{display:block;}div.vectorMenu ul{position:absolute;background-color:white;border:solid 1px silver;border-top-width:0;list-style:none;list-style-image:none;list-style-type:none;padding:0;margin:0;margin-left:-1px;text-align:left;}/**/div.vectorMenu ul,x:-moz-any-link{min-width:5em;}/**/div.vectorMenu ul,x:-moz-any-link,x:default{min-width:0;}div.vectorMenu li{padding:0;margin:0;text-align:left;line-height:1em;}/**/div.vectorMenu li a{display:inline-block;padding:0.5em;white-space:nowrap;}/**/div.vectorMenu li>a{display:block;}div.vectorMenu li a{color:#0645ad;cursor:pointer;font-size:0.8em;}div.vectorMenu li.selected a,div.vectorMenu li.selected a:visited{color:#333333;text-decoration:none;}/**/#p-search h5{display:none;}/**/#p-search{float:left;}#p-search{margin-right:0.5em;margin-left:0.5em;}#p-search form,#p-search input{margin:0;margin-top:0.4em;}#simpleSearch{margin-top:0.5em;position:relative;border:solid 1px #AAAAAA;background-color:white;background-image:url(http://wiki.bukkit.org/skins/vector/images/search-fade.png);background-position:top left;background-repeat:repeat-x;}#simpleSearch label{font-size:0.8em;top:0.25em;}#simpleSearch input#searchInput{margin:0;border-width:0;padding:0.25em;line-height:1em;font-size:0.8em;width:9em;background-color:transparent;}/**/#simpleSearch button#searchButton{margin:0;padding:0;width:1.75em;height:1.5em;border:none;cursor:pointer;background-color:transparent;background-image:url(http://wiki.bukkit.org/skins/vector/images/search-ltr.png);background-position:center center;background-repeat:no-repeat;}/**/#simpleSearch>button#searchButton{height:100%;}.suggestions-special .special-label{font-size:0.8em;color:gray;}.suggestions-special .special-query{color:black;font-style:italic;}.suggestions-special .special-hover{background-color:silver;}/**/#mw-panel{position:absolute;top:160px;padding-top:1em;width:10em;left:0;}#mw-panel div.portal{padding-bottom:1.5em;}#mw-panel div.portal h5{font-weight:normal;color:#444444;padding:0.25em;padding-top:0;padding-left:1.75em;cursor:default;border:none;font-size:0.75em;}#mw-panel div.portal div.body{margin:0;padding-top:0.5em;margin-left:1.25em;background-image:url(http://wiki.bukkit.org/skins/vector/images/portal-break.png);background-repeat:no-repeat;background-position:top left;}#mw-panel div.portal div.body ul{list-style:none;list-style-image:none;list-style-type:none;padding:0;margin:0;}#mw-panel div.portal div.body ul li{line-height:1.125em;padding:0;padding-bottom:0.5em;margin:0;overflow:hidden;font-size:0.75em;}#mw-panel div.portal div.body ul li a{color:#0645ad;}#mw-panel div.portal div.body ul li a:visited{color:#0b0080;}/**/#footer{margin-left:10em;margin-top:0;padding:0.75em;background-image:url(http://wiki.bukkit.org/skins/vector/images/border.png);background-position:top left;background-repeat:repeat-x;}#footer ul{list-style:none;list-style-image:none;list-style-type:none;margin:0;padding:0;}#footer ul li{margin:0;padding:0;padding-top:0.5em;padding-bottom:0.5em;color:#333333;font-size:0.7em;}#footer #footer-icons{float:right;}/**/body.ltr #footer #footer-places{float:left;}#footer #footer-info li{line-height:1.4em;}#footer #footer-icons li{float:left;margin-left:0.5em;line-height:2em;}#footer #footer-places li{float:left;margin-right:1em;line-height:2em;}/**/#p-logo{position:absolute;top:-160px;left:0;width:10em;height:160px;}#p-logo a{display:block;width:10em;height:160px;background-repeat:no-repeat;background-position:center center;text-decoration:none;}/**//**/#preftoc{/**/width:100%;float:left;clear:both;margin:0!important;padding:0!important;background-image:url(http://wiki.bukkit.org/skins/vector/images/preferences-break.png);background-position:bottom left;background-repeat:no-repeat;}#preftoc li{/**/float:left;margin:0;padding:0;padding-right:1px;height:2.25em;white-space:nowrap;list-style-type:none;list-style-image:none;background-image:url(http://wiki.bukkit.org/skins/vector/images/preferences-break.png);background-position:bottom right;background-repeat:no-repeat;}/**/#preftoc li:first-child{margin-left:1px;}#preftoc a,#preftoc a:active{display:inline-block;position:relative;color:#0645ad;padding:0.5em;text-decoration:none;background-image:none;font-size:0.9em;}#preftoc a:hover{text-decoration:underline;}#preftoc li.selected a{background-image:url(http://wiki.bukkit.org/skins/vector/images/preferences-fade.png);background-position:bottom;background-repeat:repeat-x;color:#333333;text-decoration:none;}#preferences{float:left;width:100%;margin:0;margin-top:-2px;clear:both;border:solid 1px #cccccc;background-color:#f9f9f9;background-image:url(http://wiki.bukkit.org/skins/vector/images/preferences-base.png);}#preferences fieldset.prefsection{border:none;padding:0;margin:1em;}#preferences fieldset.prefsection fieldset{border:none;border-top:solid 1px #cccccc;}#preferences legend{color:#666666;}#preferences fieldset.prefsection legend.mainLegend{display:none;}#preferences td{padding-left:0.5em;padding-right:0.5em;}#preferences td.htmlform-tip{font-size:x-small;padding:.2em 2em;color:#666666;}#preferences div.mw-prefs-buttons{padding:1em;}#preferences div.mw-prefs-buttons input{margin-right:0.25em;}/**/#userlogin,#userloginForm{border:solid 1px #cccccc;padding:1.2em;margin:.5em;float:left;}#userlogin{min-width:20em;max-width:90%;width:40em;}/**/#content{line-height:1.5em;}#bodyContent{font-size:0.8em;}/**/a{text-decoration:none;color:#0645ad;background:none;}a:visited{color:#0b0080;}a:active{color:#faa700;}a:hover{text-decoration:underline;}a.stub{color:#772233;}a.new,#p-personal a.new{color:#ba0000;}a.new:visited,#p-personal a.new:visited{color:#a55858;}/**/img{border:none;vertical-align:middle;}hr{height:1px;color:#aaa;background-color:#aaa;border:0;margin:.2em 0 .2em 0;}/**/h1,h2,h3,h4,h5,h6{color:black;background:none;font-weight:normal;margin:0;padding-top:.5em;padding-bottom:.17em;border-bottom:1px solid #aaa;width:auto;}h1{font-size:188%;}h1 .editsection{font-size:53%;}h2{font-size:150%;}h2 .editsection{font-size:67%;}h3,h4,h5,h6{border-bottom:none;font-weight:bold;}h3{font-size:132%;}h3 .editsection{font-size:76%;font-weight:normal;}h4{font-size:116%;}h4 .editsection{font-size:86%;font-weight:normal;}h5{font-size:100%;}h5 .editsection{font-weight:normal;}h6{font-size:80%;}h6 .editsection{font-size:125%;font-weight:normal;}p{margin:.4em 0 .5em 0;line-height:1.5em;}p img{margin:0;}abbr,acronym,.explain{border-bottom:1px dotted black;color:black;background:none;cursor:help;}q{font-family:Times,"Times New Roman",serif;font-style:italic;}/**/code{background-color:#f9f9f9;}pre{padding:1em;border:1px dashed #2f6fab;color:black;background-color:#f9f9f9;line-height:1.1em;}ul{line-height:1.5em;list-style-type:square;margin:.3em 0 0 1.5em;padding:0;list-style-image:url(http://wiki.bukkit.org/skins/vector/images/bullet-icon.png);}ol{line-height:1.5em;margin:.3em 0 0 3.2em;padding:0;list-style-image:none;}li{margin-bottom:.1em;}dt{font-weight:bold;margin-bottom:.1em;}dl{margin-top:.2em;margin-bottom:.5em;}dd{line-height:1.5em;margin-left:2em;margin-bottom:.1em;}/**/table{font-size:100%;color:black;/**/background-color:white;}fieldset table{/**/background:none;}/**/fieldset{border:1px solid #2f6fab;margin:1em 0 1em 0;padding:0 1em 1em;line-height:1.5em;}fieldset.nested{margin:0 0 0.5em 0;padding:0 0.5em 0.5em;}legend{padding:.5em;font-size:95%;}form{border:none;margin:0;}textarea{width:100%;padding:.1em;}select{vertical-align:top;}/**/#toc,.toc,.mw-warning{border:1px solid #aaa;background-color:#f9f9f9;padding:5px;font-size:95%;}#toc h2,.toc h2{display:inline;border:none;padding:0;font-size:100%;font-weight:bold;}#toc #toctitle,.toc #toctitle,#toc .toctitle,.toc .toctitle{text-align:center;}#toc ul,.toc ul{list-style-type:none;list-style-image:none;margin-left:0;padding-left:0;text-align:left;}#toc ul ul,.toc ul ul{margin:0 0 0 2em;}#toc .toctoggle,.toc .toctoggle{font-size:94%;}/**/div.floatright,table.floatright{clear:right;float:right;position:relative;margin:0 0 .5em .5em;border:0;}div.floatright p{font-style:italic;}div.floatleft,table.floatleft{float:left;clear:left;position:relative;margin:0 .5em .5em 0;border:0;}div.floatleft p{font-style:italic;}/**/div.thumb{margin-bottom:.5em;border-style:solid;border-color:white;width:auto;background-color:transparent;}div.thumbinner{border:1px solid #ccc;padding:3px!important;background-color:#f9f9f9;font-size:94%;text-align:center;overflow:hidden;}html .thumbimage{border:1px solid #ccc;}html .thumbcaption{border:none;text-align:left;line-height:1.4em;padding:3px!important;font-size:94%;}div.magnify{float:right;border:none!important;background:none!important;}div.magnify a,div.magnify img{display:block;border:none!important;background:none!important;}div.tright{clear:right;float:right;border-width:.5em 0 .8em 1.4em;}div.tleft{float:left;clear:left;margin-right:.5em;border-width:.5em 1.4em .8em 0;}img.thumbborder{border:1px solid #dddddd;}.hiddenStructure{display:none;}/**/.mw-warning{margin-left:50px;margin-right:50px;text-align:center;}/**/.usermessage{background-color:#ffce7b;border:1px solid #ffa500;color:black;font-weight:bold;margin:2em 0 1em;padding:.5em 1em;vertical-align:middle;}/**/#siteNotice{text-align:center;font-size:0.8em;margin:0;}#siteNotice div,#siteNotice p{margin:0;padding:0;margin-bottom:0.9em;}/**/.catlinks{border:1px solid #aaa;background-color:#f9f9f9;padding:5px;margin-top:1em;clear:both;}/**/#siteSub{display:none;}#jump-to-nav{display:none;}#contentSub,#contentSub2{font-size:84%;line-height:1.2em;margin:0 0 1.4em 1em;color:#7d7d7d;width:auto;}span.subpages{display:block;}/**/.center{width:100%;text-align:center;}*.center *{margin-left:auto;margin-right:auto;}/**/.small,.small *{font-size:94%;}table.small{font-size:100%;}/**/h1,h2{margin-bottom:.6em;}h3,h4,h5{margin-bottom:.3em;}#firstHeading{padding-top:0;margin-top:0;padding-top:0;margin-bottom:0.1em;line-height:1.2em;font-size:1.6em;padding-bottom:0;}#content a.external,#content a[href ^="gopher://"]{background:url(http://wiki.bukkit.org/skins/vector/images/external-link-ltr-icon.png) center right no-repeat;padding:0 13px 0 0;}#content a[href ^="https://"],.link-https{background:url(http://wiki.bukkit.org/skins/vector/images/lock-icon.png) center right no-repeat;padding:0 18px 0 0;}#content a[href ^="mailto:"],.link-mailto{background:url(http://wiki.bukkit.org/skins/vector/images/mail-icon.png) center right no-repeat;padding:0 18px 0 0;}#content a[href ^="news://"]{background:url(http://wiki.bukkit.org/skins/vector/images/news-icon.png) center right no-repeat;padding:0 18px 0 0;}#content a[href ^="ftp://"],.link-ftp{background:url(http://wiki.bukkit.org/skins/vector/images/file-icon.png) center right no-repeat;padding:0 18px 0 0;}#content a[href ^="irc://"],#content a.extiw[href ^="irc://"],.link-irc{background:url(http://wiki.bukkit.org/skins/vector/images/talk-icon.png) center right no-repeat;padding:0 18px 0 0;}#content a.external[href $=".ogg"],#content a.external[href $=".OGG"],#content a.external[href $=".mid"],#content a.external[href $=".MID"],#content a.external[href $=".midi"],#content a.external[href $=".MIDI"],#content a.external[href $=".mp3"],#content a.external[href $=".MP3"],#content a.external[href $=".wav"],#content a.external[href $=".WAV"],#content a.external[href $=".wma"],#content a.external[href $=".WMA"],.link-audio{background:url("http://wiki.bukkit.org/skins/vector/images/audio-icon.png") center right no-repeat;padding:0 18px 0 0;}#content a.external[href $=".ogm"],#content a.external[href $=".OGM"],#content a.external[href $=".avi"],#content a.external[href $=".AVI"],#content a.external[href $=".mpeg"],#content a.external[href $=".MPEG"],#content a.external[href $=".mpg"],#content a.external[href $=".MPG"],.link-video{background:url("http://wiki.bukkit.org/skins/vector/images/video-icon.png") center right no-repeat;padding:0 18px 0 0;}#content a.external[href $=".pdf"],#content a.external[href $=".PDF"],#content a.external[href *=".pdf#"],#content a.external[href *=".PDF#"],#content a.external[href *=".pdf?"],#content a.external[href *=".PDF?"],.link-document{background:url("http://wiki.bukkit.org/skins/vector/images/document-icon.png") center right no-repeat;padding:0 18px 0 0;}/**/#content a.extiw,#content a.extiw:active{color:#36b;background:none;padding:0;}#content a.external{color:#36b;}#content .printfooter{display:none;}/**/#pt-userpage,#pt-anonuserpage,#pt-login{background:url(http://wiki.bukkit.org/skins/vector/images/user-icon.png) left top no-repeat;padding-left:15px!important;text-transform:none;}.toccolours{border:1px solid #aaa;background-color:#f9f9f9;padding:5px;font-size:95%;}#bodyContent{position:relative;width:100%;}#mw-js-message{font-size:0.8em;}div#bodyContent{line-height:1.5em;}/**/#ca-unwatch.icon,#ca-watch.icon{margin-right:1px;}#ca-unwatch.icon a,#ca-watch.icon a{margin:0;padding:0;outline:none;display:block;width:26px;height:2.5em;}#ca-unwatch.icon a{background-image:url(http://wiki.bukkit.org/skins/vector/images/watch-icons.png);background-position:-43px 60%;}#ca-watch.icon a{background-image:url(http://wiki.bukkit.org/skins/vector/images/watch-icons.png);background-position:5px 60%;}#ca-unwatch.icon a:hover{background-image:url(http://wiki.bukkit.org/skins/vector/images/watch-icons.png);background-position:-67px 60%;}#ca-watch.icon a:hover{background-image:url(http://wiki.bukkit.org/skins/vector/images/watch-icons.png);background-position:-19px 60%;}#ca-unwatch.icon a.loading,#ca-watch.icon a.loading{background-image:url(http://wiki.bukkit.org/skins/vector/images/watch-icon-loading.gif);background-position:center 60%;}#ca-unwatch.icon a span,#ca-watch.icon a span{display:none;}div.vectorTabs ul{background-image:url(http://wiki.bukkit.org/skins/vector/images/tab-break.png);background-position:right bottom;background-repeat:no-repeat;}
</style>
<style media="screen" style="display:none">/**//**/.mw-plusminus-pos{color:#006400;}/**/.mw-plusminus-neg{color:#8b0000;}/**/.mw-plusminus-null{color:#aaa;}/**//**/ span.comment{font-style:italic;}span.changedby{font-size:95%;}/**/.texvc{direction:ltr;unicode-bidi:embed;}img.tex{vertical-align:middle;}span.texhtml{font-family:serif;}/**//**/#wikiPreview.ontop{margin-bottom:1em;}/**/#editform,#toolbar,#wpTextbox1{clear:both;}div#mw-js-message{margin:1em 5%;padding:0.5em 2.5%;border:solid 1px #ddd;background-color:#fcfcfc;}/**/.editsection{float:right;margin-left:5px;}/**/h2#filehistory{clear:both;}table.filehistory th,table.filehistory td{vertical-align:top;}table.filehistory th{text-align:left;}table.filehistory td.mw-imagepage-filesize,table.filehistory th.mw-imagepage-filesize{white-space:nowrap;}table.filehistory td.filehistory-selected{font-weight:bold;}/**/li span.deleted,span.history-deleted{text-decoration:line-through;color:#888;font-style:italic;}/**/.not-patrolled{background-color:#ffa;}.unpatrolled{font-weight:bold;color:red;}div.patrollink{font-size:75%;text-align:right;}/**/body.ltr td.mw-label{text-align:right;}body.ltr td.mw-input{text-align:left;}body.ltr td.mw-submit{text-align:left;}body.rtl td.mw-label{text-align:left;}body.rtl td.mw-input{text-align:right;}body.rtl td.mw-submit{text-align:right;}td.mw-label{vertical-align:top;}.prefsection td.mw-label{width:20%;}.prefsection table{width:100%;}td.mw-submit{white-space:nowrap;}table.mw-htmlform-nolabel td.mw-label{width:0!important;}/**/body.rtl .thumbcaption{text-align:right;}body.rtl .magnify{float:left;}body.ltr .thumbcaption{text-align:left;}body.ltr .magnify{float:right;}/**/.mw-hidden-cats-hidden{display:none;}.catlinks-allhidden{display:none;}/**/p.mw-ipb-conveniencelinks,p.mw-protect-editreasons,p.mw-filedelete-editreasons,p.mw-delete-editreasons,p.mw-revdel-editreasons{font-size:90%;float:right;}/**/.searchresults{}.searchresults p{margin-left:0.4em;margin-top:1em;margin-bottom:1.2em;}div.searchresult{font-size:95%;width:38em;}.mw-search-results{margin-left:0.4em;}.mw-search-results li{padding-bottom:1em;list-style:none;list-style-image:none;}.mw-search-results li a{font-size:108%;}.mw-search-result-data{color:green;font-size:97%;}.mw-search-formheader{background-color:#f3f3f3;margin-top:1em;border:1px solid silver;}.mw-search-formheader div.search-types{float:left;padding-left:0.25em;}.rtl .mw-search-formheader div.search-types{float:right;}.mw-search-formheader div.search-types ul{margin:0!important;padding:0!important;list-style:none!important;}.mw-search-formheader div.search-types ul li{float:left;margin:0;padding:0;}.mw-search-formheader div.search-types ul li a{display:block;padding:0.5em;}.mw-search-formheader div.search-types ul li.current a{color:#333333;cursor:default;}.mw-search-formheader div.search-types ul li.current a:hover{text-decoration:none;}.mw-search-formheader div.results-info{float:right;padding:0.5em;padding-right:0.75em;}.mw-search-formheader div.results-info ul{margin:0!important;padding:0!important;list-style:none!important;}.mw-search-formheader div.results-info ul li{float:right;margin:0;padding:0;}fieldset#mw-searchoptions{margin:0;padding-left:0.75em!important;padding-right:0.75em!important;padding-bottom:0.5em!important;padding-top:0.5em!important;border:none;background-color:#f9f9f9;border:1px solid silver!important;border-top-width:0!important;}fieldset#mw-searchoptions legend{display:none;}fieldset#mw-searchoptions h4{padding:0;margin:0;float:left;}.rtl fieldset#mw-searchoptions h4{float:right;}fieldset#mw-searchoptions div#mw-search-togglebox{float:right;}.rtl fieldset#mw-searchoptions div#mw-search-togglebox{float:left;}fieldset#mw-searchoptions div#mw-search-togglebox label{margin-right:0.25em;}fieldset#mw-searchoptions div#mw-search-togglebox input{margin-left:0.25em;}fieldset#mw-searchoptions table{float:left;margin-right:3em;}fieldset#mw-searchoptions table td{padding-right:1em;}.rtl fieldset#mw-searchoptions table td{padding-left:1em;padding-right:0;}body.rtl fieldset#mw-searchoptions table{margin-right:0;margin-left:3em;float:right;}fieldset#mw-searchoptions div.divider{clear:both;border-bottom:1px solid #DDDDDD;padding-top:0.5em;margin-bottom:0.5em;}td#mw-search-menu{padding-left:6em;font-size:85%;}div#mw-search-interwiki{float:right;width:18em;border-style:solid;border-color:#AAAAAA;border-width:1px;margin-top:2ex;}.rtl div#mw-search-interwiki{float:left;}div#mw-search-interwiki li{font-size:95%;}.mw-search-interwiki-more{float:right;font-size:90%;}.rtl .mw-search-interwiki-more{float:left;}div#mw-search-interwiki-caption{text-align:center;font-weight:bold;font-size:95%;}.mw-search-interwiki-project{font-size:97%;text-align:left;padding-left:0.2em;padding-right:0.15em;padding-bottom:0.2em;padding-top:0.15em;background-color:#ececec;border-top:1px solid #BBBBBB;}.rtl .mw-search-interwiki-project{text-align:right;}span.searchalttitle{font-size:95%;}div.searchdidyoumean{font-size:127%;margin-top:0.8em;/**/color:#c00;}div.searchdidyoumean em{font-weight:bold;}.searchmatch{font-weight:bold;}table#mw-search-top-table{background-color:transparent;}/**/td#mw-search-togglebox{text-align:right;}table#mw-search-powertable{width:100%;}form#powersearch{clear:both;}/**/.mw-userrights-disabled{color:#888;}table.mw-userrights-groups * td,table.mw-userrights-groups * th{padding-right:1.5em;}/**/.os-suggest{overflow:auto;overflow-x:hidden;position:absolute;top:0px;left:0px;width:0px;background-color:white;background-color:Window;border-style:solid;border-color:#AAAAAA;border-width:1px;z-index:99;font-size:95%;}table.os-suggest-results{font-size:95%;cursor:pointer;border:0;border-collapse:collapse;width:100%;}.os-suggest-result,.os-suggest-result-hl{white-space:nowrap;background-color:white;background-color:Window;color:black;color:WindowText;padding:2px;}.os-suggest-result-hl,.os-suggest-result-hl-webkit{background-color:#4C59A6;color:white;}.os-suggest-result-hl{/**/background-color:Highlight;color:HighlightText;}.os-suggest-toggle{position:relative;left:1ex;font-size:65%;}.os-suggest-toggle-def{position:absolute;top:0px;left:0px;font-size:65%;visibility:hidden;}/**//**/.autocomment{color:gray;}#pagehistory .history-user{margin-left:0.4em;margin-right:0.2em;}#pagehistory span.minor{font-weight:bold;}#pagehistory li{border:1px solid white;}#pagehistory li.selected{background-color:#f9f9f9;border:1px dashed #aaa;}/**/.newpage,.minor,.bot{font-weight:bold;}/**/.mw-uctop{font-weight:bold;}/**/table.mw-listgrouprights-table tr{vertical-align:top;}.listgrouprights-revoked{text-decoration:line-through;}/**/td.mw-statistics-numbers{text-align:right;}/**/h4.mw-specialpagesgroup{background-color:#dcdcdc;padding:2px;margin:.3em 0em 0em 0em;}.mw-specialpagerestricted{font-weight:bold;}#shared-image-dup,#shared-image-conflict{font-style:italic;}/**/table.mw-emailuser-table{width:98%;}td#mw-emailuser-sender,td#mw-emailuser-recipient{font-weight:bold;}/**/table.allpageslist{background-color:transparent;}table.mw-allpages-table-form,table.mw-allpages-table-chunk{background-color:transparent;width:100%;}td.mw-allpages-alphaindexline{text-align:right;}td.mw-allpages-nav,p.mw-allpages-nav{text-align:right;font-size:smaller;margin-bottom:1em;}table.mw-allpages-table-form tr{vertical-align:top;}/**/table#mw-prefixindex-list-table,table#mw-prefixindex-nav-table{width:98%;background-color:transparent;}td#mw-prefixindex-nav-form{font-size:smaller;margin-bottom:1em;text-align:right;vertical-align:top;}/**/div.mw-warning-with-logexcerpt{padding:3px;margin-bottom:3px;border:2px solid #2F6FAB;clear:both;}div.mw-warning-with-logexcerpt ul li{font-size:90%;}/**/ span.mw-revdelundel-link,strong.mw-revdelundel-link{font-size:90%;}span.mw-revdelundel-hidden,input.mw-revdelundel-hidden{visibility:hidden;}td.mw-revdel-checkbox,th.mw-revdel-checkbox{padding-right:10px;text-align:center;}/**/a.feedlink{background:url("http://wiki.bukkit.org/skins/common/images/feed-icon.png") center left no-repeat;padding-left:16px;}/**/.plainlinks a{background:none!important;padding:0!important;}/**/table.wikitable{margin:1em 1em 1em 0;background:#f9f9f9;border:1px #aaa solid;border-collapse:collapse;}.wikitable th,.wikitable td{border:1px #aaa solid;padding:0.2em;}.wikitable th{background:#f2f2f2;text-align:center;}.wikitable caption{font-weight:bold;}/**/table.collapsed tr.collapsable{display:none;}/**/.success{color:green;font-size:larger;}.error{color:red;font-size:larger;}.errorbox,.successbox{font-size:larger;border:2px solid;padding:.5em 1em;float:left;margin-bottom:2em;color:#000;}.errorbox{border-color:red;background-color:#fff2f2;}.successbox{border-color:green;background-color:#dfd;}.errorbox h2,.successbox h2{font-size:1em;font-weight:bold;display:inline;margin:0 .5em 0 0;border:none;}.visualClear{clear:both;}#mw_trackbacks{border:solid 1px #bbbbff;background-color:#eeeeff;padding:0.2em;}/**/.TablePager{min-width:80%;}.TablePager_nav a{text-decoration:none;}.TablePager{border-collapse:collapse;}.TablePager,.TablePager td,.TablePager th{border:1px solid #aaaaaa;padding:0 0.15em 0 0.15em;}.TablePager th{background-color:#eeeeff}.TablePager td{background-color:#ffffff}.TablePager tr:hover td{background-color:#eeeeff}.imagelist td,.imagelist th{white-space:nowrap}.imagelist .TablePager_col_links{background-color:#eeeeff}.imagelist .TablePager_col_img_description{white-space:normal}.imagelist th.TablePager_sort{background-color:#ccccff}/**/#mw-allmessagestable .allmessages-customised td.am_default{background-color:#fcffc4;}#mw-allmessagestable tr.allmessages-customised:hover td.am_default{background-color:#faff90;}#mw-allmessagestable td.am_actual{background-color:#e2ffe2;}#mw-allmessagestable tr.allmessages-customised:hover + tr.allmessages-customised td.am_actual{background-color:#b1ffb1;}/**/ul#filetoc{text-align:center;border:1px solid #aaaaaa;background-color:#f9f9f9;padding:5px;font-size:95%;margin-bottom:0.5em;margin-left:0;margin-right:0;}#filetoc li{display:inline;list-style-type:none;padding-right:2em;}/**/table.mw_metadata{font-size:0.8em;margin-left:0.5em;margin-bottom:0.5em;width:300px;}table.mw_metadata caption{font-weight:bold;}table.mw_metadata th{font-weight:normal;}table.mw_metadata td{padding:0.1em;}table.mw_metadata{border:none;border-collapse:collapse;}table.mw_metadata td,table.mw_metadata th{text-align:center;border:1px solid #aaaaaa;padding-left:0.1em;padding-right:0.1em;}table.mw_metadata th{background-color:#f9f9f9;}table.mw_metadata td{background-color:#fcfcfc;}/**/table.gallery{border:1px solid #ccc;margin:2px;padding:2px;background-color:white;}table.gallery tr{vertical-align:top;}table.gallery td{vertical-align:top;background-color:#f9f9f9;border:solid 2px white;}table.gallery caption{font-weight:bold;}div.gallerybox{margin:2px;}div.gallerybox div.thumb{text-align:center;border:1px solid #ccc;margin:2px;}div.gallerytext{overflow:hidden;font-size:94%;padding:2px 4px;}table.mw-enhanced-rc{background:none;border:0;border-spacing:0;}td.mw-enhanced-rc{white-space:nowrap;padding:0;vertical-align:top;font-family:monospace}#mw-addcategory-prompt{display:inline;margin-left:1em;}#mw-addcategory-prompt input{margin-left:0.5em;margin-right:0.5em;}.mw-remove-category{padding:8px;background-image:url(http://wiki.bukkit.org/skins/common/images/remove.png);background-position:center center;background-repeat:no-repeat;}.mw-ajax-addcategory{padding-left:20px;background-image:url(http://wiki.bukkit.org/skins/common/images/add.png);background-position:left center;background-repeat:no-repeat;}.mw-ajax-loader{background-image:url(http://wiki.bukkit.org/skins/common/images/ajax-loader.gif);background-position:center center;background-repeat:no-repeat;padding:16px;position:relative;top:-16px;}.mw-small-spinner{padding:10px!important;margin-right:0.6em;background-image:url(http://wiki.bukkit.org/skins/common/images/spinner.gif);background-position:center center;background-repeat:no-repeat;}/**/a.sortheader{margin:0 0.3em;}
</style>
<link rel="stylesheet" href="Plugin_Tutorial-Dateien/commonPrint.css" media="print"><style style="display:none">/**//**/#p-logo{visibility:hidden;}.replace-logo{background-image:url(http://wiki.bukkit.org/images/7/79/BukkitLogo.png);background-repeat:no-repeat;background-position:center;width:160px;height:160px;position:absolute;top:0;left:0;}.replace-logo a{position:absolute;width:100%;height:100%;top:0;left:0;text-decoration:none;/**/z-index:10;/**/background-color:white;/**/opacity:0;/**/filter:alpha(opacity=1);/**/}#p-personal{z-index:9999;padding:5px 8px 8px 5px;-webkit-border-bottom-left-radius:10px;-webkit-border-bottom-right-radius:10px;-moz-border-radius-bottomleft:10px;-moz-border-radius-bottomright:10px;border-bottom-left-radius:10px;border-bottom-right-radius:10px;background:url(http://wiki.bukkit.org/images/f/f9/Mediumlogo.png) no-repeat bottom right #343434;}#p-personal a:link{color:#EEEEEE;}#p-personal a:hover{color:#DDDDDD;}#p-personal a:visited{color:#CCCCCC;}/**//**//**/#bodyContent a[href ^="http://www.youtube.com"],#article a[href ^="http://www.youtube.com"],#mw_contentholder a[href ^="http://www.youtube.com"],#bodyContent a[href ^="http://youtube.com"],#article a[href ^="http://youtube.com"],#mw_contentholder a[href ^="http://youtube.com"]{background:url(http://wiki.bukkit.org/images/7/70/Favicon-youtube.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.bukkit.org"],#article a[href ^="http://www.bukkit.org"],#mw_contentholder a[href ^="http://www.bukkit.org"],#bodyContent a[href ^="http://bukkit.org"],#article a[href ^="http://bukkit.org"],#mw_contentholder a[href ^="http://bukkit.org"],#bodyContent a[href ^="http://forums.bukkit.org"],#article a[href ^="http://forums.bukkit.org"],#mw_contentholder a[href ^="http://forums.bukkit.org"] #bodyContent a[href ^="http://plugins.bukkit.org"],#article a[href ^="http://plugins.bukkit.org"],#mw_contentholder a[href ^="http://plugins.bukkit.org"]{background:url(http://wiki.bukkit.org/images/2/24/Favicon-bukkit.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://ci.bukkit.org"],#article a[href ^="http://ci.bukkit.org"],#mw_contentholder a[href ^="http://ci.bukkit.org"]{background:url(http://wiki.bukkit.org/images/b/bb/Favicon-cibukkit.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://repo.bukkit.org"],#article a[href ^="http://repo.bukkit.org"],#mw_contentholder a[href ^="http://repo.bukkit.org"]{background:url(http://wiki.bukkit.org/images/6/6e/Favicon-repobukkit.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://leaky.bukkit.org"],#article a[href ^="http://leaky.bukkit.org"],#mw_contentholder a[href ^="http://leaky.bukkit.org"]{background:url(http://wiki.bukkit.org/images/e/ee/Favicon-leakybukkit.png) center left no-repeat!important; padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.github.com"],#article a[href ^="http://www.github.com"],#mw_contentholder a[href ^="http://www.github.com"],#bodyContent a[href ^="http://github.com"],#article a[href ^="http://github.com"],#mw_contentholder a[href ^="http://github.com"],#bodyContent a[href ^="https://www.github.com"],#article a[href ^="https://www.github.com"],#mw_contentholder a[href ^="https://www.github.com"],#bodyContent a[href ^="https://github.com"],#article a[href ^="https://github.com"],#mw_contentholder a[href ^="https://github.com"]{background:url(http://wiki.bukkit.org/images/8/8c/Favicon-github.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.pastebin.com"],#article a[href ^="http://www.pastebin.com"],#mw_contentholder a[href ^="http://www.pastebin.com"],#bodyContent a[href ^="http://pastebin.com"],#article a[href ^="http://pastebin.com"],#mw_contentholder a[href ^="http://pastebin.com"]{background:url(http://wiki.bukkit.org/images/a/a2/Favicon-pastebin.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.mediafire.com"],#article a[href ^="http://www.mediafire.com"],#mw_contentholder a[href ^="http://www.mediafire.com"],#bodyContent a[href ^="http://mediafire.com"],#article a[href ^="http://mediafire.com"],#mw_contentholder a[href ^="http://mediafire.com"]{background:url(http://wiki.bukkit.org/images/5/59/Favicon-mediafire.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.minecraftwiki.net"],#article a[href ^="http://www.minecraftwiki.net"],#mw_contentholder a[href ^="http://www.minecraftwiki.net"],#bodyContent a[href ^="http://minecraftwiki.net"],#article a[href ^="http://minecraftwiki.net"],#mw_contentholder a[href ^="http://minecraftwiki.net"]{background:url(http://wiki.bukkit.org/images/b/bb/Favicon-minecraftwiki.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.minecraftforum.net"],#article a[href ^="http://www.minecraftforum.net"],#mw_contentholder a[href ^="http://www.minecraftforum.net"],#bodyContent a[href ^="http://minecraftforum.net"],#article a[href ^="http://minecraftforum.net"],#mw_contentholder a[href ^="http://minecraftforum.net"]{background:url(http://wiki.bukkit.org/images/d/df/Favicon-minecraftforum.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://www.minecraft.net"],#article a[href ^="http://www.minecraft.net"],#mw_contentholder a[href ^="http://www.minecraft.net"],#bodyContent a[href ^="http://minecraft.net"],#article a[href ^="http://minecraft.net"],#mw_contentholder a[href ^="http://minecraft.net"]{background:url(http://wiki.bukkit.org/images/7/78/Favicon-minecraft.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/#bodyContent a[href ^="http://download.oracle.com"],#article a[href ^="http://download.oracle.com"],#mw_contentholder a[href ^="http://download.oracle.com"]{background:url(http://wiki.bukkit.org/images/d/dc/Favicon-downloadoracle.png) center left no-repeat!important;padding-left:20px!important;padding-right:0px!important;}/**/pre{font-size:14px!important;font-style:bold;}
</style>
<link rel="stylesheet" href="Plugin_Tutorial-Dateien/index.css" media="print"><style style="display:none">/**/#bodyContent{/**//**/}body{position:relative;}.splashClass{background-image:url('http://i.imgur.com/XG4mX.jpg');background-repeat:no-repeat;background-position:top center;}html{margin-top:28px!important;}.t-netbar{position:absolute;top:-28px;width:100%;-webkit-box-shadow:inset 0 0 1px #666666,1px 1px 2px rgba(0,0,0,0.65);-moz-box-shadow:inset 0 0 1px #666666,1px 1px 2px rgba(0,0,0,0.65);-ms-box-shadow:inset 0 0 1px #666666,1px 1px 2px rgba(0,0,0,0.65);-o-box-shadow:inset 0 0 1px #666666,1px 1px 2px rgba(0,0,0,0.65);box-shadow:inset 0 0 1px #666666,1px 1px 2px rgba(0,0,0,0.65);background-color:#343434;background-image:-webkit-linear-gradient(top,#4d4d4d,#343434);background-image:-moz-linear-gradient(top,#4d4d4d,#343434);background-image:-ms-linear-gradient(top,#4d4d4d,#343434);background-image:-o-linear-gradient(top,#4d4d4d,#343434);background-image:linear-gradient(top,#4d4d4d,#343434);font:12px/18px Tahoma,Geneva,Verdana;height:28px;text-shadow:0px -1px 0px rgba(0,0,0,0.6);z-index:9998;}.t-netbar ul{margin:0;padding:0;list-style:none;list-style-image:none;}.t-netbar a.promotions{float:left;font-style:normal;font-weight:bold;color:#FC3;line-height:28px;height:41px;padding:0 35px 0 10px;background:url("http://wiki.bukkit.org/skins/common/netbar/premium-netbar-ribbon.png") no-repeat top right;border:none;}.t-netbar:before,.t-netbar:after{content:"";display:table;}.t-netbar:after{clear:both;}.ie7 .t-netbar,.ie8 .t-netbar{zoom:1;}.t-netbar .t-netbar-discover>li,.t-netbar .t-netbar-help>li,.t-netbar .t-netbar-preferences>li,.t-netbar .t-netbar-account>li{position:relative;}.t-netbar .t-netbar-discover>li>ul,.t-netbar .t-netbar-help>li>ul,.t-netbar .t-netbar-preferences>li>ul,.t-netbar .t-netbar-account>li>ul{position:absolute;left:-9999px;display:none;}.t-netbar .t-netbar-discover>li:hover>ul,.t-netbar .t-netbar-help>li:hover>ul,.t-netbar .t-netbar-preferences>li:hover>ul,.t-netbar .t-netbar-account>li:hover>ul{left:0;text-indent:0;display:block;}.t-netbar .t-netbar-discover>li ul .section:hover>ul,.t-netbar .t-netbar-help>li ul .section:hover>ul,.t-netbar .t-netbar-preferences>li ul .section:hover>ul,.t-netbar .t-netbar-account>li ul .section:hover>ul{left:100%;top:0;}.t-netbar .t-netbar-discover>li .u-icon-dropDown,.t-netbar .t-netbar-help>li .u-icon-dropDown,.t-netbar .t-netbar-preferences>li .u-icon-dropDown,.t-netbar .t-netbar-account>li .u-icon-dropDown{content:"";border-style:solid dashed dashed;border-color:transparent;border-top-color:silver;height:0;line-height:0;width:0;border-width:3px 3px 0;padding-top:1px;position:absolute;top:12px;right:6px;}.t-netbar a{color:#fff;font-family:Tahoma,Geneva,Verdana;white-space:nowrap;display:block;}.t-netbar a:visited{color:#fff;}.t-netbar a:hover{color:#fff;text-decoration:none;}.t-netbar a>strong{color:#FFCC33;}.t-netbar a>strong:hover{color:#fff;}.t-netbar .t-netbar-section,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li{float:left;}.t-netbar .t-netbar-section:hover,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li:hover{background:#222222;}.t-netbar .t-netbar-section .t-netbar-label,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li .t-netbar-label{border-right:1px solid #333;display:block;line-height:28px;padding:0 15px;}.t-netbar .t-netbar-section .t-netbar-label + ul,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li .t-netbar-label + ul{background:#222222;-webkit-border-bottom-right-radius:6px;-moz-border-bottom-right-radius:6px;-ms-border-bottom-right-radius:6px;-o-border-bottom-right-radius:6px;border-bottom-right-radius:6px;-webkit-border-bottom-left-radius:6px;-moz-border-bottom-left-radius:6px;-ms-border-bottom-left-radius:6px;-o-border-bottom-left-radius:6px;border-bottom-left-radius:6px;-webkit-box-shadow:0px 1px 1px rgba(0,0,0,0.3);-moz-box-shadow:0px 1px 1px rgba(0,0,0,0.3);-ms-box-shadow:0px 1px 1px rgba(0,0,0,0.3);-o-box-shadow:0px 1px 1px rgba(0,0,0,0.3);box-shadow:0px 1px 1px rgba(0,0,0,0.3);}.t-netbar .t-netbar-section .t-netbar-label + ul>li>a,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li .t-netbar-label + ul>li>a{display:block;padding:4px 8px;}.t-netbar .t-netbar-section .t-netbar-label + ul>li>a:hover,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li .t-netbar-label + ul>li>a:hover{background-color:#111;}.t-netbar .t-netbar-section .t-netbar-label + ul>li:last-child>a,.t-netbar .t-netbar-userInfo .t-netbar-authorize>li .t-netbar-label + ul>li:last-child>a{-webkit-border-bottom-right-radius:6px;-moz-border-bottom-right-radius:6px;-ms-border-bottom-right-radius:6px;-o-border-bottom-right-radius:6px;border-bottom-right-radius:6px;-webkit-border-bottom-left-radius:6px;-moz-border-bottom-left-radius:6px;-ms-border-bottom-left-radius:6px;-o-border-bottom-left-radius:6px;border-bottom-left-radius:6px;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li{background:url("http://wiki.bukkit.org/skins/common/netbar/discover.png") no-repeat 8px 0;text-indent:-9999px;width:100px;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i{display:inline-block;height:12px;line-height:0;vertical-align:middle;width:12px;width:30px;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-curse{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/curse.png") no-repeat 5px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-mmoc{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/mmoc.png") no-repeat 0 center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-wowstead{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/wowstead.png") no-repeat 1px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-arenajunkies{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/aj.png") no-repeat 0 center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-minecraftforums{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/mcf.png") no-repeat 0 center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-darthhater{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/dh.png") no-repeat 3px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-diablofans{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/dfans.png") no-repeat -1px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-terraria{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/terraria.png") no-repeat -1px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-minecraftwiki{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/minecraftwiki.png") no-repeat -1px center;}.t-netbar .t-netbar-curseInfo .t-netbar-discover>li>ul li i.u-icon-bukkit{background:url("http://wiki.bukkit.org/skins/common/netbar/sites/bukkit.png") no-repeat -1px center;}.t-netbar .t-netbar-curseInfo .t-netbar-preferences>li>a{background:url("http://wiki.bukkit.org/skins/common/netbar/netbar-sprite.png") no-repeat;background-position:2px -86px;padding:0 24px 0 20px;text-indent:-9999px;}.t-netbar .t-netbar-curseInfo .t-netbar-preferences>li:hover>a{background-position:-33px -86px;}.t-netbar .t-netbar-userInfo{float:right;}.t-netbar .t-netbar-userInfo:before,.t-netbar .t-netbar-userInfo:after{content:"";display:table;}.t-netbar .t-netbar-userInfo:after{clear:both;}.ie7 .t-netbar .t-netbar-userInfo,.ie8 .t-netbar .t-netbar-userInfo{zoom:1;}.t-netbar .t-netbar-userInfo .t-netbar-authorize:hover{background:transparent;}.t-netbar .t-netbar-userInfo .t-netbar-messages{position:relative;}.t-netbar .t-netbar-userInfo .t-netbar-messages>li>a{background:url("http://wiki.bukkit.org/skins/common/netbar/netbar-sprite.png") no-repeat;background-position:2px -25px;display:block;height:28px;padding:0 20px;}.t-netbar .t-netbar-userInfo .t-netbar-messages .option-count{-webkit-border-radius:2px;-moz-border-radius:2px;-ms-border-radius:2px;-o-border-radius:2px;border-radius:2px;color:#fff;font-family:Arial,Sans-Serif;font-size:8px;text-align:center;padding:0 3px;font-weight:bold;background:#d70101;line-height:11px;position:absolute;top:5px;right:9px;}.t-netbar .t-netbar-userInfo .t-netbar-avatar img{height:24px;padding-bottom:3px;vertical-align:bottom;}
</style>
<style style="display:none">/* generated user stylesheet */
a.new, #quickbar a.new { color: #CC2200; }

</style>
<script src="Plugin_Tutorial-Dateien/beacon.js" async=""></script><script type="text/javascript" async="" src="Plugin_Tutorial-Dateien/quant.js"></script><script src="Plugin_Tutorial-Dateien/ga.js" async="" type="text/javascript"></script><script>
var skin="vector",
stylepath="/skins",
wgUrlProtocols="http\\:\\/\\/|https\\:\\/\\/|ftp\\:\\/\\/|irc\\:\\/\\/|gopher\\:\\/\\/|telnet\\:\\/\\/|nntp\\:\\/\\/|worldwind\\:\\/\\/|mailto\\:|news\\:|svn\\:\\/\\/",
wgArticlePath="/$1",
wgScriptPath="",
wgScriptExtension=".php",
wgScript="/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://wiki.bukkit.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Plugin_Tutorial",
wgTitle="Plugin Tutorial",
wgAction="view",
wgArticleId=568,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=6787,
wgVersion="1.16.2",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "BukkitWiki", "5": "BukkitWiki talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "500": "BukkitDev", "501": "BukkitDev talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "bukkitwiki": 4, "bukkitwiki_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "bukkitdev": 500, "bukkitdev_talk": 501, "image": 6, "image_talk": 7},
wgSiteName="BukkitWiki",
wgCategories=["Tutorials"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgFCKEditorDir="extensions/FCKeditor/fckeditor/",
wgFCKEditorExtDir="extensions/FCKeditor",
wgFCKEditorToolbarSet="Wiki",
wgFCKEditorHeight="0";
</script><script src="Plugin_Tutorial-Dateien/wikibits.js"></script> <script src="Plugin_Tutorial-Dateien/ajax.js"></script> <!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.htc")}</style><![endif]--> <script src="Plugin_Tutorial-Dateien/index.php"></script> <style type="text/css">/**/.source-java{line-height:normal;}.source-java li,.source-java pre{line-height:normal;border:0px none white;}/*--*/.java.source-java .de1,.java.source-java .de2{font:normal normal 1em/1.2em monospace;margin:0;padding:0;background:none;vertical-align:top;}.java.source-java{font-family:monospace;}.java.source-java .imp{font-weight:bold;color:red;}.java.source-java li,.java.source-java .li1{font-weight:normal;vertical-align:top;}.java.source-java .ln{width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}.java.source-java .li2{font-weight:bold;vertical-align:top;}.java.source-java .kw1{color:#000000; font-weight:bold;}.java.source-java .kw2{color:#000066;font-weight:bold;}.java.source-java .kw3{color:#003399;}.java.source-java .kw4{color:#000066;font-weight:bold;}.java.source-java .co1{color:#666666;font-style:italic;}.java.source-java .co2{color:#006699;}.java.source-java .co3{color:#008000;font-style:italic;font-weight:bold;}.java.source-java .coMULTI{color:#666666;font-style:italic;}.java.source-java .es0{color:#000099;font-weight:bold;}.java.source-java .br0{color:#009900;}.java.source-java .sy0{color:#339933;}.java.source-java .st0{color:#0000ff;}.java.source-java .nu0{color:#cc66cc;}.java.source-java .me1{color:#006633;}.java.source-java .me2{color:#006633;}.java.source-java .ln-xtra,.java.source-java li.ln-xtra,.java.source-java div.ln-xtra{background-color:#ffc;}.java.source-java span.xtra{display:block;}/**/</style> <style type="text/css">/**/@import"/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";/**/</style><style type="text/css">/**/.source-yaml{line-height:normal;}.source-yaml li,.source-yaml pre{line-height:normal;border:0px none white;}/**/.yaml.source-yaml .de1,.yaml.source-yaml .de2{font:normal normal 1em/1.2em monospace;margin:0;padding:0;background:none;vertical-align:top;}.yaml.source-yaml{font-family:monospace;}.yaml.source-yaml .imp{font-weight:bold;color:red;}.yaml.source-yaml li,.yaml.source-yaml .li1{font-weight:normal;vertical-align:top;}.yaml.source-yaml .ln{width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}.yaml.source-yaml .li2{font-weight:bold;vertical-align:top;}.yaml.source-yaml .kw1{font-weight:bold;}.yaml.source-yaml .co0{color:#303050;background-color:#F5F5F5}.yaml.source-yaml .co1{color:blue;}.yaml.source-yaml .co2{font-weight:bold;color:red;}.yaml.source-yaml .co3{color:green;}.yaml.source-yaml .co4{color:#007F45;}.yaml.source-yaml .co5{color:#7f7fFF;}.yaml.source-yaml .co6{color:#FF7000;}.yaml.source-yaml .co7{color:#FF45C0;}.yaml.source-yaml .co8{font-weight:bold;color:#005F5F;}.yaml.source-yaml .sy1{color:cyan;}.yaml.source-yaml .sy2{font-weight:bold;color:brown;}.yaml.source-yaml .st0{color:#CF00CF;}.yaml.source-yaml .ln-xtra,.yaml.source-yaml li.ln-xtra,.yaml.source-yaml div.ln-xtra{background-color:#ffc;}.yaml.source-yaml span.xtra{display:block;}/**/</style> <style type="text/css">/**/@import"/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";/**/</style></head> <body class="mediawiki ltr ns-0 ns-subject page-Plugin_Tutorial skin-vector"><div id="mw-page-base" class="noprint"></div><div id="mw-head-base" class="noprint"></div><!--//--><div id="content"><a id="top"></a><div id="mw-js-message" style="display:none;"></div><div id="siteNotice"><table style="border: 0; background-color: #ffffff" cellpadding="0" cellspacing="3" width="100%"><tbody><tr><td style="width: 100%; vertical-align: top; border:1px solid #ccc; background-color: #ffffff"><div style="background-color:#aaa; font-size:1px; height:8px; border-bottom:1px solid #ccc;"></div><div style="padding:0.5em 0.3em 0.3em 0.3em; margin:0; text-indent:0.1em; font-weight: bold; border-bottom:1px solid #aaaaaa;"><i>Welcome to the BukkitWiki!</i></div><div style="font-size:100%; padding:3px"><table cellpadding="0" cellspacing="3" width="100%"><tbody><tr><td align="left" valign="top" width="100%"><p>Want to help out? We would love to have you! <a href="http://wiki.bukkit.org/Special:UserLogin" title="Special:UserLogin">Signup or Login to get started!</a> Join #bukkitwiki on <a href="http://wiki.bukkit.org/IRC" title="IRC">IRC</a> to have <a href="http://wiki.bukkit.org/IRC/Bots/Danroth" title="IRC/Bots/Danroth">Danroth</a>
 report changes to you! Changes include: Latest Wiki Change, Latest 
Craftbukkit Build, Latest Recommended Craftbukkit Build, Latest News 
from Notch, and much more!</p></td></tr></tbody></table></div></td></tr></tbody></table><div class="replace-logo"><a href="http://wiki.bukkit.org/Main_Page" title="Main Page">Home</a></div></div><h1 id="firstHeading" class="firstHeading">Plugin Tutorial</h1><div id="bodyContent"><h3 id="siteSub">From BukkitWiki</h3><div id="contentSub"></div><div id="jump-to-nav">Jump to: <a href="#mw-head">navigation</a>, <a href="#p-search">search</a></div><table style="border: 0; background-color: #ffffff" cellpadding="0" cellspacing="3" width="100%"><tbody><tr><td style="width: 100%; vertical-align: top; border:1px solid #ccc; background-color: #ffffff"><div style="background-color:#ff0000; font-size:1px; height:8px; border-bottom:1px solid #ccc;"></div><div style="float:right; margin:8px; margin-top:5px"><a href="http://wiki.bukkit.org/File:TODOIcon.png" class="image"><img alt="TODOIcon.png" src="Plugin_Tutorial-Dateien/32px-TODOIcon.png" height="31" width="32"></a></div><div style="padding:0.5em 0.3em 0.3em 0.3em; margin:0; text-indent:0.1em; font-weight: bold; border-bottom:1px solid #aaaaaa;"><b>Working on it...</b></div><div style="font-size:100%; padding:3px"><table cellpadding="0" cellspacing="3" width="100%"><tbody><tr><td align="left" valign="top" width="100%"><p>This page is a work in progess, check back regularly for more content!</p></td></tr></tbody></table></div></td></tr></tbody></table><h2><span class="mw-headline" id="Introduction">Introduction </span></h2><table style="clear: right; margin-bottom: .5em; float: right; padding: .5em 0 .8em 1.4em; background: none; width: auto;" cellpadding="0" cellspacing="0"><tbody><tr><td><table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div><ul><li class="toclevel-1 tocsection-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li> <li class="toclevel-1 tocsection-2"><a href="#Learning_Java"><span class="tocnumber">2</span> <span class="toctext">Learning Java</span></a><ul><li class="toclevel-2 tocsection-3"><a href="#Video_Java_Tutorials"><span class="tocnumber">2.1</span> <span class="toctext">Video Java Tutorials</span></a></li> <li class="toclevel-2 tocsection-4"><a href="#Written_Java_Tutorials"><span class="tocnumber">2.2</span> <span class="toctext">Written Java Tutorials</span></a></li></ul></li><li class="toclevel-1 tocsection-5"><a href="#The_Development_Environment"><span class="tocnumber">3</span> <span class="toctext">The Development Environment</span></a></li> <li class="toclevel-1 tocsection-6"><a href="#Starting_a_Plugin_Project"><span class="tocnumber">4</span> <span class="toctext">Starting a Plugin Project</span></a><ul><li class="toclevel-2 tocsection-7"><a href="#Create_a_Project"><span class="tocnumber">4.1</span> <span class="toctext">Create a Project</span></a></li> <li class="toclevel-2 tocsection-8"><a href="#Reference_the_Bukkit_API"><span class="tocnumber">4.2</span> <span class="toctext">Reference the Bukkit API</span></a></li> <li class="toclevel-2 tocsection-9"><a href="#Bukkit_Javadocs"><span class="tocnumber">4.3</span> <span class="toctext">Bukkit Javadocs</span></a></li> <li class="toclevel-2 tocsection-10"><a href="#Creating_a_package"><span class="tocnumber">4.4</span> <span class="toctext">Creating a package</span></a></li> <li class="toclevel-2 tocsection-11"><a href="#Creating_the_Plugin.27s_Class"><span class="tocnumber">4.5</span> <span class="toctext">Creating the Plugin's Class</span></a></li> <li class="toclevel-2 tocsection-12"><a href="#Creating_plugin.yml"><span class="tocnumber">4.6</span> <span class="toctext">Creating plugin.yml</span></a></li></ul></li><li class="toclevel-1 tocsection-13"><a href="#onEnable.28.29_and_onDisable.28.29"><span class="tocnumber">5</span> <span class="toctext">onEnable() and onDisable()</span></a><ul><li class="toclevel-2 tocsection-14"><a href="#Introduction_to_onEnable.28.29_and_onDisable.28.29"><span class="tocnumber">5.1</span> <span class="toctext">Introduction to onEnable() and onDisable()</span></a></li> <li class="toclevel-2 tocsection-15"><a href="#Logging_a_message"><span class="tocnumber">5.2</span> <span class="toctext">Logging a message</span></a></li></ul></li><li class="toclevel-1 tocsection-16"><a href="#Listeners"><span class="tocnumber">6</span> <span class="toctext">Listeners</span></a></li> <li class="toclevel-1 tocsection-17"><a href="#Commands"><span class="tocnumber">7</span> <span class="toctext">Commands</span></a><ul><li class="toclevel-2 tocsection-18"><a href="#The_onCommand.28.29_Method"><span class="tocnumber">7.1</span> <span class="toctext">The onCommand() Method</span></a><ul><li class="toclevel-3 tocsection-19"><a href="#Setting_up_the_command"><span class="tocnumber">7.1.1</span> <span class="toctext">Setting up the command</span></a></li></ul></li><li class="toclevel-2 tocsection-20"><a href="#Adding_your_Command_to_the_Plugin.yml"><span class="tocnumber">7.2</span> <span class="toctext">Adding your Command to the Plugin.yml</span></a></li> <li class="toclevel-2 tocsection-21"><a href="#Console_Commands_vs._Player_Commands"><span class="tocnumber">7.3</span> <span class="toctext">Console Commands vs. Player Commands</span></a></li> <li class="toclevel-2 tocsection-22"><a href="#Using_a_separate_CommandExecutor_class"><span class="tocnumber">7.4</span> <span class="toctext">Using a separate CommandExecutor class</span></a></li> <li class="toclevel-2 tocsection-23"><a href="#Writing_a_safe_onCommand"><span class="tocnumber">7.5</span> <span class="toctext">Writing a safe onCommand</span></a><ul><li class="toclevel-3 tocsection-24"><a href="#Make_sure_the_sender_is_a_Player_before_casting"><span class="tocnumber">7.5.1</span> <span class="toctext">Make sure the sender is a Player before casting</span></a></li> <li class="toclevel-3 tocsection-25"><a href="#Check_the_arguments_length"><span class="tocnumber">7.5.2</span> <span class="toctext">Check the arguments length</span></a></li> <li class="toclevel-3 tocsection-26"><a href="#When_getting_another_Player_by_their_name.2C_make_sure_they_are_online"><span class="tocnumber">7.5.3</span> <span class="toctext">When getting another Player by their name, make sure they are online</span></a></li></ul></li></ul></li><li class="toclevel-1 tocsection-27"><a href="#Plugin_Configuration.2FSettings"><span class="tocnumber">8</span> <span class="toctext">Plugin Configuration/Settings</span></a></li> <li class="toclevel-1 tocsection-28"><a href="#Permissions"><span class="tocnumber">9</span> <span class="toctext">Permissions</span></a><ul><li class="toclevel-2 tocsection-29"><a href="#Configuring_your_permissions"><span class="tocnumber">9.1</span> <span class="toctext">Configuring your permissions</span></a><ul><li class="toclevel-3 tocsection-30"><a href="#Defaults"><span class="tocnumber">9.1.1</span> <span class="toctext">Defaults</span></a></li> <li class="toclevel-3 tocsection-31"><a href="#Children"><span class="tocnumber">9.1.2</span> <span class="toctext">Children</span></a></li></ul></li><li class="toclevel-2 tocsection-32"><a href="#Setting_your_own_permissions"><span class="tocnumber">9.2</span> <span class="toctext">Setting your own permissions</span></a></li></ul></li><li class="toclevel-1 tocsection-33"><a href="#Scheduling_Tasks_and_Background_Tasks"><span class="tocnumber">10</span> <span class="toctext">Scheduling Tasks and Background Tasks</span></a></li> <li class="toclevel-1 tocsection-34"><a href="#Block_Manipulation"><span class="tocnumber">11</span> <span class="toctext">Block Manipulation</span></a></li> <li class="toclevel-1 tocsection-35"><a href="#.28Player.29_Inventory_Manipulation"><span class="tocnumber">12</span> <span class="toctext">(Player) Inventory Manipulation</span></a></li> <li class="toclevel-1 tocsection-36"><a href="#Item_Manipulation"><span class="tocnumber">13</span> <span class="toctext">Item Manipulation</span></a><ul><li class="toclevel-2 tocsection-37"><a href="#Enchantments"><span class="tocnumber">13.1</span> <span class="toctext">Enchantments</span></a></li></ul></li><li class="toclevel-1 tocsection-38"><a href="#Maps.2C_and_Sets.2C_and_Lists.2C_Oh_My.21"><span class="tocnumber">14</span> <span class="toctext">Maps, and Sets, and Lists, Oh My!</span></a><ul><li class="toclevel-2 tocsection-39"><a href="#HashMaps_and_How_to_Use_Them"><span class="tocnumber">14.1</span> <span class="toctext">HashMaps and How to Use Them</span></a><ul><li class="toclevel-3 tocsection-40"><a href="#Defining_a_HashMap"><span class="tocnumber">14.1.1</span> <span class="toctext">Defining a HashMap</span></a></li> <li class="toclevel-3 tocsection-41"><a href="#More_Ideas_for_HashMaps"><span class="tocnumber">14.1.2</span> <span class="toctext">More Ideas for HashMaps</span></a><ul><li class="toclevel-4 tocsection-42"><a href="#Data_Value_Lookups"><span class="tocnumber">14.1.2.1</span> <span class="toctext">Data Value Lookups</span></a></li></ul></li><li class="toclevel-3 tocsection-43"><a href="#Saving.2FLoading_a_HashMap"><span class="tocnumber">14.1.3</span> <span class="toctext">Saving/Loading a HashMap</span></a></li></ul></li></ul></li><li class="toclevel-1 tocsection-44"><a href="#Metadata"><span class="tocnumber">15</span> <span class="toctext">Metadata</span></a><ul><li class="toclevel-2 tocsection-45"><a href="#Why_to_use_Metadata"><span class="tocnumber">15.1</span> <span class="toctext">Why to use Metadata</span></a></li> <li class="toclevel-2 tocsection-46"><a href="#Why_not_to_use_Metadata"><span class="tocnumber">15.2</span> <span class="toctext">Why not to use Metadata</span></a></li> <li class="toclevel-2 tocsection-47"><a href="#Getting_.26_Setting_Metadata"><span class="tocnumber">15.3</span> <span class="toctext">Getting &amp; Setting Metadata</span></a></li></ul></li><li class="toclevel-1 tocsection-48"><a href="#Databases"><span class="tocnumber">16</span> <span class="toctext">Databases</span></a><ul><li class="toclevel-2 tocsection-49"><a href="#SQLite"><span class="tocnumber">16.1</span> <span class="toctext">SQLite</span></a></li> <li class="toclevel-2 tocsection-50"><a href="#MySQL"><span class="tocnumber">16.2</span> <span class="toctext">MySQL</span></a></li></ul></li><li class="toclevel-1 tocsection-51"><a href="#Deploying_your_Plugin"><span class="tocnumber">17</span> <span class="toctext">Deploying your Plugin</span></a></li> <li class="toclevel-1 tocsection-52"><a href="#Tips_and_Tricks"><span class="tocnumber">18</span> <span class="toctext">Tips and Tricks</span></a><ul><li class="toclevel-2 tocsection-53"><a href="#Igniting_the_Player"><span class="tocnumber">18.1</span> <span class="toctext">Igniting the Player</span></a></li> <li class="toclevel-2 tocsection-54"><a href="#Killing_the_player"><span class="tocnumber">18.2</span> <span class="toctext">Killing the player</span></a></li> <li class="toclevel-2 tocsection-55"><a href="#Creating_an_Explosion"><span class="tocnumber">18.3</span> <span class="toctext">Creating an Explosion</span></a></li> <li class="toclevel-2 tocsection-56"><a href="#Hiding_player_from_other_players"><span class="tocnumber">18.4</span> <span class="toctext">Hiding player from other players</span></a></li> <li class="toclevel-2 tocsection-57"><a href="#Striking_thunders_where_player_clicks"><span class="tocnumber">18.5</span> <span class="toctext">Striking thunders where player clicks</span></a></li></ul></li><li class="toclevel-1 tocsection-58"><a href="#Request_Section"><span class="tocnumber">19</span> <span class="toctext">Request Section</span></a></li> <li class="toclevel-1 tocsection-59"><a href="#Example_Files_and_Templates"><span class="tocnumber">20</span> <span class="toctext">Example Files and Templates</span></a></li></ul></td></tr></tbody></table><script>if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script></td></tr></tbody></table><p>This tutorial was copied from <a href="http://forums.bukkit.org/threads/plugin-development-a-huge-tutorial-status-under-development.15167/" class="external text" rel="nofollow">this thread</a>. It was originally written by <b>Adamki11s</b>. It has been expanded with more examples since then.</p><p><a href="http://forums.bukkit.org/members/adamki11s.42417/" class="external text" rel="nofollow">Adamki11s Bukkit Profile Page</a></p><p>After finishing this tutorial you might want to check out <b>Adamki11s'</b> "Extras" library which provides various advanced functions.<a href="http://forums.bukkit.org/threads/dev-extras-v1-1-additional-useful-and-advanced-methods-for-plugin-developers-953.26207/" class="external text" rel="nofollow">Extras library forums thread.</a></p><h2><span class="mw-headline" id="Learning_Java">Learning Java </span></h2><p><b>These tutorials require basic knowledge of the programming language Java.</b> If you know nothing or too few about Java then you should check out the resources below, as they might help you a lot!</p><h3><span class="mw-headline" id="Video_Java_Tutorials">Video Java Tutorials </span></h3><ul><li><a href="http://www.youtube.com/watch?v=83qsYGamQig" class="external text" rel="nofollow">GTOTechnology</a> - A Bukkit plugin tutorial for beginners. (Outdated) </li><li><a href="http://www.youtube.com/user/dinnerbone" class="external text" rel="nofollow">Dinnerbone</a> - Great plugin tutorials by Bukkit's very own Dinnerbone (Outdated) </li><li><a href="http://www.youtube.com/user/thenewboston#p/c/FE2CE09D83EE3E28/0/Hl-zzrqQoSE" class="external text" rel="nofollow">Thenewboston</a> - Lots of great videos here. </li><li><a href="http://www.javavideotutes.com/lessons" class="external text" rel="nofollow">JavaVideoTutes.com</a> - Covers a lot of topics. </li></ul><h3><span class="mw-headline" id="Written_Java_Tutorials">Written Java Tutorials </span></h3><ul><li><a href="http://download.oracle.com/javase/tutorial/index.html" class="external text" rel="nofollow">Oracle Documentation</a> (Company that currently supports Java) </li><li><a href="http://www.java2s.com/Tutorial/Java/CatalogJava.htm" class="external text" rel="nofollow">Java2s.com</a> - Pretty much everything possible in Java here </li><li><a href="http://www.javacoffeebreak.com/java101/java101.html" class="external text" rel="nofollow">Java 101</a> - In depth, written tutorials </li></ul><p>If you haven't worked with the Java programming language yet you should really have a look at some tutorials.</p><h2><span class="mw-headline" id="The_Development_Environment">The Development Environment </span></h2><p>Before
 developing a plugin (or learning Java) you will need to setup a 
development environment. This includes but not limited to installing an 
IDE (Integrated Development Environment). The IDE is a program you will 
use to compile and debug your plugins. There are three popular IDEs for 
Java: <a href="http://www.eclipse.org/" class="external text" rel="nofollow">Eclipse</a>, <a href="http://netbeans.org/" class="external text" rel="nofollow">Netbeans</a>, and <a href="http://www.jetbrains.com/idea/" class="external text" rel="nofollow">IntelliJ IDEA</a>.
 Eclipse is the most popular among Bukkit developers, while IntelliJ is 
widely used in industry. If you are new to Java it is recommended that 
you use Eclipse as it is the IDE that will be used in this tutorial.</p><dl><dd><dl><dd><i>For further instructions, see <a href="http://wiki.bukkit.org/Setting_Up_Your_Workspace" title="Setting Up Your Workspace">Setting Up Your Workspace</a></i></dd></dl></dd></dl><h2><span class="mw-headline" id="Starting_a_Plugin_Project">Starting a Plugin Project </span></h2><h3><span class="mw-headline" id="Create_a_Project">Create a Project </span></h3><p>Before
 starting, you'll need to setup your workspace and files in Eclipse. 
Start Eclipse, then create a new Project by selecting <i>File &gt; New &gt; Java Project:</i></p><p><a href="http://wiki.bukkit.org/File:NewJavaProject.png" class="image"><img alt="NewJavaProject.png" src="Plugin_Tutorial-Dateien/NewJavaProject.png" height="477" width="577"></a></p><p>Name
 the project whatever you want, then run through the new project wizard,
 following the instructions on screen. A folder will appear in the 
package explorer pane on the left hand side; "left-click" on the little 
arrow beside it to show the contents of your project.</p><h3><span class="mw-headline" id="Reference_the_Bukkit_API">Reference the Bukkit API </span></h3><p>Before
 you begin developing your plugin you will need to add the bukkit API 
library to your project as an external JAR, you can also add any other 
API's you may want to use.</p><p>The latest bukkit API can be downloaded from here: <a href="http://dl.bukkit.org/latest-dev/bukkit.jar" class="external text" rel="nofollow">Bukkit API - Development Snapshot</a></p><p><br>Right
 click on the folder with the name of your project in the Package 
Explorer pane on the left hand side of the screen and choose <i>Properties</i>. Select <i>Java Build Path</i> from the box of options on the left and the dialog inside the properties box should change. Click <i>Add External JARs</i> and browse to wherever you downloaded the Bukkit API.</p><p><a href="http://wiki.bukkit.org/File:BuildPathPic.png" class="image"><img alt="BuildPathPic.png" src="Plugin_Tutorial-Dateien/BuildPathPic.png" height="548" width="730"></a></p><h3><span class="mw-headline" id="Bukkit_Javadocs">Bukkit Javadocs </span></h3><p>If
 you have some experience with Eclipse and Java you will know that when 
you hover your mouse over any built in class or method a yellow box will
 pop up, containing the documentation for that class or method. This is 
known as a Javadoc and can also be accessed online at the <a href="http://download.oracle.com/javase/6/docs/api/" class="external text" rel="nofollow">Oracle website</a>.
 Bukkit also has documentation which often contains useful descriptions 
of each method and class provided by the API, which is available <a href="http://jd.bukkit.org/apidocs/" class="external text" rel="nofollow">here</a>.
 In order to have this information available within Eclipse, so that it 
will pop up whenever you hover over a Bukkit method or class, first 
right click on the Bukkit jar where it appears under "Referenced 
Libraries" in the project explorer, and select "Properties". Choose the 
"Javadoc Location"&nbsp;item on the left of the window that pops up, and
 paste the url "<a href="http://jd.bukkit.org/apidocs/" class="external free" rel="nofollow">http://jd.bukkit.org/apidocs/</a>" (without quotes)&nbsp;into the textbox under "Javadoc URL". It should look like this:</p><p><a href="http://wiki.bukkit.org/File:Bukkitjavadocs.png" class="image"><img alt="Bukkitjavadocs.png" src="Plugin_Tutorial-Dateien/Bukkitjavadocs.png" height="555" width="791"></a></p><p>Click
 validate, and then click OK. Done! Now the Bukkit Javadocs are linked 
to the Bukkit source, and you can access helpful documentation from 
within Eclipse.</p><h3><span class="mw-headline" id="Creating_a_package">Creating a package </span></h3><p>Now
 you need to create a 'package' which will store all the Java class 
files we will be using. Right click on the folder labelled "src" and 
select <i>New &gt; Package</i>:</p><p><a href="http://wiki.bukkit.org/File:MakePackage.png" class="image"><img alt="MakePackage.png" src="Plugin_Tutorial-Dateien/MakePackage.png" height="282" width="634"></a></p><p>Name your package as follows:</p><ul><li>If you have a domain name, the package would be the domain name in reverse.<ul><li>Ex: i-am-a-bukkit-developer.com your package would be com.i_am_a_bukkit_developer <a href="http://docs.oracle.com/javase/tutorial/java/package/namingpkgs.html" class="external text" rel="nofollow">source</a> </li><li>Avoid using a domain you do not own. </li></ul></li><li>No domain? Here are some common conventions<ol><li>Create an account on a source control site such as github or sourceforge<ul><li>For github, follow the instructions <a href="http://pages.github.com/" class="external text" rel="nofollow">here</a> and you will have a sub-domain, so your package would be com.github.&lt;username&gt;<br></li></ul></li><li>Use your email. Ex: &lt;username&gt;@gmail.com would be com.gmail.&lt;username&gt;<br></li><li>This is the least preferred method. Simply use any unique package naming, again, use this as your last resort. </li></ol></li></ul><p>There are several things that your package must <b>not</b> begin with and those are:</p><ul><li>org.bukkit </li><li>net.bukkit </li><li>com.bukkit </li></ul><p>Once
 you have the base package name, you will want to finish it off with the
 plugin name. Lets use the github pages example for this. If you are 
creating a plugin called "TestPlugin" your full package name would be 
"com.github.&lt;username&gt;.testplugin".</p><h3><span class="mw-headline" id="Creating_the_Plugin.27s_Class">Creating the Plugin's Class </span></h3><p>Now
 that we have our project set up we can start to add class files and 
begin making our plugin. It's always good practice to create your main 
class first and give it the same name as your plugin. Right click on the
 package you created before, and select&nbsp; <i>New &gt; Class</i>. You should have a new class similar to the following</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">package</span> <span class="br0">{</span>$TopLevelDomain<span class="br0">}</span>.<span class="br0">{</span>$Domain<span class="br0">}</span>.<span class="br0">{</span>$PluginName<span class="br0">}</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">import</span> <span class="co2">org.bukkit.plugin.java.JavaPlugin</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> <span class="br0">{</span>$PluginName<span class="br0">}</span> <span class="kw1">extends</span> JavaPlugin <span class="br0">{</span>
&nbsp;
<span class="br0">}</span></pre></div></div></blockquote><h3><span class="mw-headline" id="Creating_plugin.yml">Creating plugin.yml </span></h3><p>You have now set up the main file and your project. To allow bukkit to 'see' it we need to add the <b><a href="http://wiki.bukkit.org/Plugin_YAML" title="Plugin YAML">plugin.yml</a></b>
 file. This file will contain essential information, and without it your
 plugin will NOT work. This time we want to right click on the project 
folder, NOT "src". Select <i>New &gt; File</i>. Name the file "<b>plugin.yml</b>" and click ok. Eclipse will open your currently blank <b>plugin.yml</b> file in the default text editor. <i>(Hint:&nbsp;If you want to keep your workspace organised close the text editor and drag the <b>plugin.yml</b> file onto the main workspace(To the right) and you will be able to edit the file inside eclipse.)</i> There are two essential things you need to add; your main class reference, and commands/usage. The most simple <b>plugin.yml</b> file would look like this&nbsp;:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="yaml source-yaml"><pre class="de1"><span class="co3">name</span><span class="sy2">: </span><span class="br0">{</span>$PluginName<span class="br0">}</span><span class="co3">
main</span><span class="sy2">: </span><span class="br0">{</span>$PackageName<span class="br0">}</span>.<span class="br0">{</span>$MainClass<span class="br0">}</span><span class="co3">
version</span><span class="sy2">: </span><span class="br0">{</span>$VersionNumber<span class="br0">}</span></pre></div></div></blockquote><p>Note:
 The package name often includes the plugin name so don't be surprised 
to see &lt;pluginname&gt;.&lt;pluginname&gt; at the end of the second 
line! Your main class may or may not be the name of your plugin 
depending on what you named it earlier, keep in mind this is 
case-sensitive.</p><p>At this point your plugin can be loaded by Bukkit,
 and will be accompanied with log entries indicating this. but it will 
do nothing!</p><h2><span class="mw-headline" id="onEnable.28.29_and_onDisable.28.29">onEnable() and onDisable() </span></h2><p>These
 methods are called whenever the plugin is enabled and disabled. By 
default your plugin will automatically enable itself when loaded so you 
can register your events and provide some debug output here. <code>onEnable()</code> is invoked when the plugin is enabled, and should contain logic to setup your plugin when it is enabled. <code>onDisable()</code>
 is invoked when a plugin is disabled, and should contain logic to clean
 up your plugin and associated state. Additionally plugins can override 
the <code>onLoad()</code> method to perform additional logic when the plugin loads but</p><h3><span class="mw-headline" id="Introduction_to_onEnable.28.29_and_onDisable.28.29">Introduction to onEnable() and onDisable() </span></h3><p>Create the methods <code>onEnable()</code> and <code>onDisable()</code> inside the main class created in the previous section. It will look something like the following</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">package</span> <span class="br0">{</span>$TopLevelDomain<span class="br0">}</span>.<span class="br0">{</span>$Domain<span class="br0">}</span>.<span class="br0">{</span>$PluginName<span class="br0">}</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">import</span> <span class="co2">org.bukkit.plugin.java.JavaPlugin</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> <span class="br0">{</span>$PluginName<span class="br0">}</span> <span class="kw1">extends</span> JavaPlugin <span class="br0">{</span>
&nbsp;
    @Override
    <span class="kw1">public</span> <span class="kw4">void</span> onEnable<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
        <span class="co1">// TODO Insert logic to be performed when the plugin is enabled</span>
    <span class="br0">}</span>
&nbsp;
    @Override
    <span class="kw1">public</span> <span class="kw4">void</span> onDisable <span class="br0">{</span>
        <span class="co1">// TODO Insert logic to be performed when the plugin is disabled</span>
    <span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>The methods now exists, but they don't do anything yet.</p><h3><span class="mw-headline" id="Logging_a_message">Logging a message </span></h3><p>A
 plugin can print a message to the console and the server log. It can 
accomplish this by invoking the correct method from the plugin's logger.
 First we must invoke the <code>getLogger()</code> method to retrieve the logger associate with this plugin. Then we can start logging.</p><p>We will write to the log when <code>onEnable()</code> method is called. We can do that by inserting the following line into the <code>onEnable()</code> method.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1">getLogger<span class="br0">(</span><span class="br0">)</span>.<span class="me1">info</span><span class="br0">(</span><span class="st0">"onEnable has been invoked!"</span><span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><p>You can then do the same inside <code><b>onDisable()</b></code>, making sure to change the message.</p><p>Your main class should now look something like this:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">package</span> <span class="br0">{</span>$TopLevelDomain<span class="br0">}</span>.<span class="br0">{</span>$Domain<span class="br0">}</span>.<span class="br0">{</span>$PluginName<span class="br0">}</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">import</span> <span class="co2">java.util.logging.Logger</span><span class="sy0">;</span>
<span class="kw1">import</span> <span class="co2">org.bukkit.plugin.java.JavaPlugin</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">public</span> <span class="kw1">class</span> <span class="br0">{</span>$PluginName<span class="br0">}</span> <span class="kw1">extends</span> JavaPlugin <span class="br0">{</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> onEnable<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
		getLogger<span class="br0">(</span><span class="br0">)</span>.<span class="me1">info</span><span class="br0">(</span><span class="st0">"onEnabled has been invoked!"</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="br0">}</span>
&nbsp;
	<span class="kw1">public</span> <span class="kw4">void</span> onDisable<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
		getLogger<span class="br0">(</span><span class="br0">)</span>.<span class="me1">info</span><span class="br0">(</span><span class="st0">"onDisable has been invoked!"</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><h2><span class="mw-headline" id="Listeners">Listeners </span></h2><p>Listeners
 are classes which implement org.bukkit.event.Listner and have methods 
that are executed in response to an event. For further details about 
listeners,</p><dl><dd><dl><dd><i>Please See: <a href="http://wiki.bukkit.org/Introduction_to_the_New_Event_System" title="Introduction to the New Event System">Introduction to the New Event System</a></i></dd></dl></dd></dl><h2><span class="mw-headline" id="Commands">Commands </span></h2><h3><span class="mw-headline" id="The_onCommand.28.29_Method">The onCommand() Method </span></h3><p>So,
 you now know how to register events and do something when they happen, 
but what if you only want something to happen when a command is typed? 
You use <code><b>onCommand</b></code>. This code is run whenever a player types a command preceded by the "/" character. E.g. typing "/do something" would call the <code><b>onCommand</b></code> method. In this case nothing would happen because no behaviour has been programmed.</p><p>Avoid
 using command names that are the same as those that come with Bukkit, 
and also consider carefully how unique your commands names will be. E.g.
 the "give" command is already used by several plugins, and if you 
implement yet another "give" command, your plugin will become 
incompatible with those other plugins. You must register your commands 
in the plugin's <b>plugin.yml</b> or they will not trigger this method.</p><p>The <code><b>onCommand</b></code>
 method must always return a boolean value - either true or false. If 
the value returned is true then you won't see any noticable events. 
However if it returns false then the plugin will revert to your plugin 
files' 'usage: property' and display a message to the user showing them 
how to use the command as specified in the <b>plugin.yml</b> file.</p><p>When using the <code><b>onCommand</b></code> you should always register 4 parameters.</p><ul><li><code><b>CommandSender sender</b></code> - who sent the command </li></ul><ul><li><code><b>Command cmd</b></code> - the command that was executed </li></ul><ul><li><code><b>String commandLabel</b></code> - the command alias that was used </li></ul><ul><li><code><b>String[] args</b></code> - an array of additional arguments, e.g. typing <i>/hello abc def</i> would put <i>abc</i> in args[0], and <i>def</i> in args[1] </li></ul><h4><span class="mw-headline" id="Setting_up_the_command">Setting up the command </span></h4><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
	<span class="kw1">if</span><span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"basic"</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span> <span class="co1">// If the player typed /basic then do the following...</span>
		<span class="co1">// doSomething</span>
		<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
	<span class="br0">}</span> <span class="co1">//If this has happened the function will break and return true. if this hasn't happened the a value of false will be returned.</span>
	<span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span> 
<span class="br0">}</span></pre></div></div></blockquote><p>When coding the <code><b>onCommand</b></code>
 function it is always good practice to return false at the very end of 
the function. Returning false will display the usage dialog set in <b>plugin.yml</b>
 (see below). This way if anything goes wrong the help message will be 
displayed. When returning a value the function will exit so if you 
return true any code underneath won't be run, unless a return statement 
is nested in a if statement or similar.</p><p>The <code><b>.equalsIgnoreCase("basic")</b></code>
 just means that it won't distinguish between upper and lower case 
characters. For example, the string "BAsIc" and "BasiC" would both equal
 basic and the code would be executed.</p><h3><span class="mw-headline" id="Adding_your_Command_to_the_Plugin.yml">Adding your Command to the Plugin.yml </span></h3><p>You will also need to add the command to your <b>plugin.yml</b> file. Add the following to the end of <b>plugin.yml</b>:</p><blockquote><code><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="yaml source-yaml"><pre class="de1"><span class="co4">commands</span>:<span class="co4">
   basic</span>:<span class="co3">
      description</span><span class="sy2">: </span>This is a demo command.<span class="co3">
      usage</span><span class="sy2">: </span>/&lt;command&gt; <span class="br0">[</span>player<span class="br0">]</span><span class="co3">
      permission</span><span class="sy2">: </span>&lt;plugin name&gt;.basic<span class="co3">
      permission-message</span><span class="sy2">: </span>You don't have &lt;permission&gt;</pre></div></div></code></blockquote><ul><li><code><b>basic</b></code> - the name of the command. </li></ul><ul><li><code><b>description</b></code> - the description of the command . </li></ul><ul><li><code><b>usage</b></code> - the help dialog that users will see when you return false in the <code><b>onCommand</b></code> method. Write clearly, so that others can discern what the command is and how to use it. </li></ul><ul><li><code><b>permission</b></code> - This is used by some help plugins to work out which commands to show to the user. </li></ul><ul><li><code><b>permission-message</b></code> - This is output when the player attempts but does not have permission to use the command. </li></ul><p>Note that yml files use 2 spaces for tabs, as the tab character will cause problems.</p><h3><span class="mw-headline" id="Console_Commands_vs._Player_Commands">Console Commands vs. Player Commands </span></h3><p>You may have noticed the <code><b>CommandSender sender</b></code> parameter above. <code><b>CommandSender</b></code> is a Bukkit interface which has two useful (for plugin writers) implementations: <code><b>Player</b></code> and <code><b>ConsoleCommandSender</b></code> (to be accurate, <code><b>Player</b></code> is also an interface).</p><p>When you're writing your plugin, it's a very good idea to ensure that commands that <i>can</i> be run from the console actually work, and that commands that should only be run as a logged-in player really <i>are</i>
 only run as a logged-in player. Some plugins simply return if the 
sender is not a player (i.e. someone tried to use the plugin's commands 
from the console), even when those commands make perfect sense from the 
console (e.g. changing the weather on the server).</p><p>One way to do this is:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
	Player player <span class="sy0">=</span> <span class="kw2">null</span><span class="sy0">;</span>
	<span class="kw1">if</span> <span class="br0">(</span>sender <span class="kw1">instanceof</span> Player<span class="br0">)</span> <span class="br0">{</span>
		player <span class="sy0">=</span> <span class="br0">(</span>Player<span class="br0">)</span> sender<span class="sy0">;</span>
	<span class="br0">}</span>
&nbsp;
	<span class="kw1">if</span> <span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"basic"</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span> <span class="co1">// If the player typed /basic then do the following...</span>
		<span class="co1">// do something...</span>
		<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
	<span class="br0">}</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"basic2"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
		<span class="kw1">if</span> <span class="br0">(</span>player <span class="sy0">==</span> <span class="kw2">null</span><span class="br0">)</span> <span class="br0">{</span>
			sender.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"this command can only be run by a player"</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
			<span class="co1">// do something else...</span>
		<span class="br0">}</span>
		<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
	<span class="br0">}</span>
	<span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><p>In this example, the command <b>basic</b> can be run by anyone - a logged-in player, or the server operator on the console. But the command <b>basic2</b> can only be run by logged-in players.</p><p>In general, you should allow as many commands as possible to work on both the console and for players. Commands that <i>need</i> a logged-in player can use the mechanism in the example above to check that the <code><b>CommandSender</b></code>
 is actually a player before continuing. Such commands would generally 
depend on some attribute of the player, e.g. a teleportation command 
needs a player to teleport, an item giving command needs a player to 
give the item to...</p><p>If you want to get more advanced, you could do
 some extra checks on your command arguments so that e.g. a 
teleportation command could be used from the console <i>if and only if</i> a player's name is also supplied.</p><h3><span class="mw-headline" id="Using_a_separate_CommandExecutor_class">Using a separate CommandExecutor class </span></h3><p>The examples above just put the <code><b>onCommand()</b></code>
 method into the plugin's main class. For small plugins, this is fine, 
but if you're writing something more extensive, it may make sense to put
 your <code><b>onCommand()</b></code> method into its own class. Fortunately, this isn't too hard:</p><ul><li>Create a new class within your plugin's package. Call it something like <b>MyPluginCommandExecutor</b> (although of course replacing <b>MyPlugin</b> with your plugin's actual name). That class <i>must</i> implement the Bukkit <b>CommandExecutor</b> interface. </li></ul><ul><li>In your plugin's <code><b>onEnable()</b></code> method, you need to create an instance of your new command executor class, and then make a call like <code>getCommand("basic").setExecutor(myExecutor);</code>, where "basic" is the command we want to handle, and <code>myExecutor</code> is the instance we created. </li></ul><p>Best explained by example:</p><p><b>MyPlugin.java</b> (the main plugin class):</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1">@Override
<span class="kw1">public</span> <span class="kw4">void</span> onEnable<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span>
	<span class="co1">// ...</span>
&nbsp;
	<span class="co1">// This will throw a NullPointException if you don't have the command defined in your plugin.yml file!</span>
	getCommand<span class="br0">(</span><span class="st0">"basic"</span><span class="br0">)</span>.<span class="me1">setExecutor</span><span class="br0">(</span><span class="kw1">new</span> MyPluginCommandExecutor<span class="br0">(</span><span class="kw1">this</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	<span class="co1">// ...</span>
<span class="br0">}</span></pre></div></div></blockquote><p><b>MyPluginCommandExecutor.java</b>:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw1">class</span> MyPluginCommandExecutor <span class="kw1">implements</span> CommandExecutor <span class="br0">{</span>
&nbsp;
	<span class="kw1">private</span> MyPlugin plugin<span class="sy0">;</span> <span class="co1">// pointer to your main class, unrequired if you don't need methods from the main class</span>
&nbsp;
	<span class="kw1">public</span> MyPluginCommandExecutor<span class="br0">(</span>MyPlugin plugin<span class="br0">)</span> <span class="br0">{</span>
		<span class="kw1">this</span>.<span class="me1">plugin</span> <span class="sy0">=</span> plugin<span class="sy0">;</span>
	<span class="br0">}</span>
&nbsp;
	@Override
	<span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span>
		<span class="co1">// implementation exactly as before...</span>
	<span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>Notice how we pass an instance of the main plugin to the constructor for <b>MyPluginCommandExecutor</b>. This allows us easy access to the main plugin's methods if we need to.</p><p>By doing this, we can better organise our code - if the main <code><b>onCommand()</b></code> method is large and complex, it can be split into submethods without cluttering up the plugin's main class.</p><p>Note that if your plugin has multiple commands, you will need set the command executor for each command individually.</p><h3><span class="mw-headline" id="Writing_a_safe_onCommand">Writing a safe onCommand </span></h3><p>When
 writing a onCommand, its important that you don't assume any 
information, such as the sender being a Player. Things to keep in mind:</p><h4><span class="mw-headline" id="Make_sure_the_sender_is_a_Player_before_casting">Make sure the sender is a Player before casting </span></h4><p>Using simple code like this makes it possible:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
	<span class="kw1">if</span> <span class="br0">(</span>sender <span class="kw1">instanceof</span> Player<span class="br0">)</span> <span class="br0">{</span>
           Player player <span class="sy0">=</span> <span class="br0">(</span>Player<span class="br0">)</span> sender<span class="sy0">;</span>
           <span class="co1">// do something</span>
        <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
           sender.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"You must be a player!"</span><span class="br0">)</span><span class="sy0">;</span>
           <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
        <span class="br0">}</span>
        <span class="co1">// do something</span>
        <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><h4><span class="mw-headline" id="Check_the_arguments_length">Check the arguments length </span></h4><p>Don't always assume the sender typed the correct amount of arguments.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
	<span class="kw1">if</span> <span class="br0">(</span>args.<span class="me1">length</span> <span class="sy0">&gt;</span> <span class="nu0">4</span><span class="br0">)</span> <span class="br0">{</span>
           sender.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Too many arguments!"</span><span class="br0">)</span><span class="sy0">;</span>
           <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
        <span class="br0">}</span> 
        <span class="kw1">if</span> <span class="br0">(</span>args.<span class="me1">length</span> <span class="sy0">&lt;</span> <span class="nu0">2</span><span class="br0">)</span> <span class="br0">{</span>
           sender.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Not enough arguments!"</span><span class="br0">)</span><span class="sy0">;</span>
           <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
        <span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><h4><span class="mw-headline" id="When_getting_another_Player_by_their_name.2C_make_sure_they_are_online">When getting another Player by their name, make sure they are online </span></h4><p>Sometimes you want to get another player by the name entered by the player. Always make sure the player is online!</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
	Player target <span class="sy0">=</span> <span class="br0">(</span>Bukkit.<span class="me1">getServer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getPlayer</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="kw1">if</span> <span class="br0">(</span>target <span class="sy0">==</span> <span class="kw2">null</span><span class="br0">)</span> <span class="br0">{</span>
           sender.<span class="me1">sendMessage</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span> <span class="sy0">+</span> <span class="st0">" is not online!"</span><span class="br0">)</span><span class="sy0">;</span>
           <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
        <span class="br0">}</span>
        <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><p>If you need to modify a Player currently not online, the <code><b>OfflinePlayer</b></code> class provides basic manipulation methods</p><h2><span class="mw-headline" id="Plugin_Configuration.2FSettings">Plugin Configuration/Settings </span></h2><p>The
 Bukkit API provides a convenient way for plugins to manage user 
configurable settings. Additionally it also serves as an easy way to 
store data.</p><dl><dd><dl><dd><i>Please see: <a href="http://wiki.bukkit.org/Introduction_to_the_New_Configuration" title="Introduction to the New Configuration">Introduction to the New Configuration</a></i></dd></dl></dd></dl><h2><span class="mw-headline" id="Permissions">Permissions </span></h2><p>With
 the new Bukkit API for permissions, they couldn't be easier. To find 
out if a player has a particular permission use the following:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">if</span><span class="br0">(</span>player.<span class="me1">hasPermission</span><span class="br0">(</span><span class="st0">"some.pointless.permission"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
   <span class="co1">//Do something</span>
<span class="br0">}</span><span class="kw1">else</span><span class="br0">{</span>
   <span class="co1">//Do something else</span>
<span class="br0">}</span></pre></div></div></blockquote><p>You can also find if a permission has been set or not (equivalent to Java's <b>null</b>) with the following function:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw4">boolean</span> isPermissionSet<span class="br0">(</span><span class="kw3">String</span> name<span class="br0">)</span></pre></div></div></blockquote><p>You
 may be wondering why there aren't any groups. The answer to that is 
because they aren't really needed. Previously one of the main uses for 
groups was to format chat messages. That however can be done just as 
easily with permissions. Inside your chat plugin's config you would 
define associations between permissions and prefixes. For example the 
permission "someChat.prefix.admin" would correspond to the prefix 
[Admin]. Whenever a player speaks with that permission their name will 
be prefixed with [Admin].</p><p>Another common usage might be to send a 
message to all users within a group. Again however this can be done with
 permissions with the following:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">for</span><span class="br0">(</span>Player player<span class="sy0">:</span> getServer<span class="br0">(</span><span class="br0">)</span>.<span class="me1">getOnlinePlayers</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
&nbsp;
    <span class="kw1">if</span><span class="br0">(</span>player.<span class="me1">hasPermission</span><span class="br0">(</span><span class="st0">"send.recieve.message"</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
        player.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"You were sent a message"</span><span class="br0">)</span><span class="sy0">;</span>
    <span class="br0">}</span>
&nbsp;
<span class="br0">}</span></pre></div></div></blockquote><p>Finally you 
may be asking, well how do I set and organise player's permissions if 
there are no groups? Although the bukkit API doesn't provide groups 
itself, you must install a permission provider plugin such as 
permissionsBukkit to manage the groups for you. <b>This API provides the interface, not the implementation.</b></p><h3><span class="mw-headline" id="Configuring_your_permissions">Configuring your permissions </span></h3><p>If
 you want more control over your permissions, for example default values
 or children then you should consider adding them to your <i>plugin.yml</i>.
 This is completely optional, however it is advised. Below is an example
 permissions config that would be appended to the end of your existing <i>plugin.yml</i>:</p><blockquote><code><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="yaml source-yaml"><pre class="de1"><span class="co4">permissions</span>:<span class="co4">
    doorman.*</span>:<span class="co3">
        description</span><span class="sy2">: </span>Gives access to <span class="kw1">all</span> doorman commands<span class="co4">
        children</span>:<span class="co3">
            doorman.kick</span><span class="sy2">: </span>true<span class="co3">
            doorman.ban</span><span class="sy2">: </span>true<span class="co3">
            doorman.knock</span><span class="sy2">: </span>true<span class="co3">
            doorman.denied</span><span class="sy2">: </span>false<span class="co4">
    doorman.kick</span>:<span class="co3">
        description</span><span class="sy2">: </span>Allows you to kick a user<span class="co3">
        default</span><span class="sy2">: </span>op<span class="co4">
    doorman.ban</span>:<span class="co3">
        description</span><span class="sy2">: </span>Allows you to ban a user<span class="co3">
        default</span><span class="sy2">: </span>op<span class="co4">
    doorman.knock</span>:<span class="co3">
        description</span><span class="sy2">: </span>Knocks on the door!<span class="co3">
        default</span><span class="sy2">: </span>true<span class="co4">
    doorman.denied</span>:<span class="co3">
        description</span><span class="sy2">: </span>Prevents this user from entering the door</pre></div></div></code></blockquote><p>Firstly, each permission your plugin uses is defined as a child node of the <i>permissions</i> node. Each permission can then optionally have a description, a default value, and children.</p><h4><span class="mw-headline" id="Defaults">Defaults </span></h4><p>By default when a permission isn't defined for a player&nbsp;<i>hasPermission</i>&nbsp;will return false. Inside your plugin.yml you can change this by setting the default node to be one of four values:</p><ul><li><b>true</b> - The permission will be true by default. </li><li><b>false</b> - The permission will by false by default. </li><li><b>op</b> - If the player is an op then this will be true. </li><li><b>not op</b> - If the player is not an op then this will be true. </li></ul><h4><span class="mw-headline" id="Children">Children </span></h4><p>Before
 now you will probably be used to the * permission to automatically 
assign all sub permissions. This has changed with the bukkit API and you
 can now define the child permissions. This allows for a lot more 
flexibility. Below is an example of how you do this:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="yaml source-yaml"><pre class="de1"><span class="co4">permissions</span>:<span class="co4">
    doorman.*</span>:<span class="co3">
        description</span><span class="sy2">: </span>Gives access to <span class="kw1">all</span> doorman commands<span class="co4">
        children</span>:<span class="co3">
            doorman.kick</span><span class="sy2">: </span>true<span class="co3">
            doorman.ban</span><span class="sy2">: </span>true<span class="co3">
            doorman.knock</span><span class="sy2">: </span>true<span class="co3">
            doorman.denied</span><span class="sy2">: </span>false</pre></div></div></blockquote><p>Here the <i>doorman.*</i> permission has several child permissions assigned to it. The way child permissions work is when <i>doorman.*</i> is set to true, the child permissions are set to their values defined in the <i>plugin.yml</i>. If however <i>doorman.*</i> was set to false then all child permissions would be inverted.</p><h3><span class="mw-headline" id="Setting_your_own_permissions">Setting your own permissions </span></h3><p>If
 you wish to know about developing your own permissions plugins (Ones 
that actaully set permissions) then check out the tutorial on&nbsp;<a href="http://wiki.bukkit.org/Developing_a_permissions_plugin" title="Developing a permissions plugin">Developing a permissions plugin</a>.</p><h2><span class="mw-headline" id="Scheduling_Tasks_and_Background_Tasks">Scheduling Tasks and Background Tasks </span></h2><p>Currently,
 Minecraft servers operate nearly all of the game logic in one thread, 
so each individual task that happens in the game needs to be kept very 
short. A complicated piece of code in your plugin has the potential to 
cause huge delays and lag spikes to the game logic, if not handled 
properly.</p><p>Luckily, Bukkit has support for scheduling code in your 
plugin. You can submit a Runnable task to occur once in the future, or 
on a recurring basis, or you can spin off a whole new independent thread
 that can perform lengthy tasks in parallel with the game logic.</p><p>There is a separate <a href="http://wiki.bukkit.org/Scheduler_Programming" title="Scheduler Programming">Scheduler Programming</a>
 tutorial which introduces the Scheduler, and gives more information on 
using it to schedule synchronous tasks, and on kicking off asynchronous 
tasks in Bukkit.</p><h2><span class="mw-headline" id="Block_Manipulation">Block Manipulation<br></span></h2><p>The
 easiest way to create blocks is to get an existing block and modify it.
 For example, if you want to change the block that is located five 
blocks above you, you would first have to get that block and then modify
 it. As an example&nbsp; in reaction to a player move event:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> onPlayerMove<span class="br0">(</span>PlayerMoveEvent evt<span class="br0">)</span> <span class="br0">{</span>
	Location loc <span class="sy0">=</span> evt.<span class="me1">getPlayer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getLocation</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	World w <span class="sy0">=</span> loc.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	loc.<span class="me1">setY</span><span class="br0">(</span>loc.<span class="me1">getY</span><span class="br0">(</span><span class="br0">)</span> <span class="sy0">+</span> <span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
	Block b <span class="sy0">=</span> w.<span class="me1">getBlockAt</span><span class="br0">(</span>loc<span class="br0">)</span><span class="sy0">;</span>
	b.<span class="me1">setTypeId</span><span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><p>Going over 
this code we can see that it will change the block that is five blocks 
above the player to stone whenever the playerMove() event is triggered. 
Firstly we get the players location, then we get the world from the 
location. We then modify the co-ordinates of the location by adding 
five. Now that we have a location and the world we can create a block 
variable which will hold the block at the location. We get this by using
 the world and location in w.getBlockAt(loc);. Finally, we have the 
block at the location so we can change its ID or even it's block data if
 we wanted to. Block data is specified by a byte so you would have to 
cast whatever value you set to a byte. For example in addition to the 
code above you could add b.setData((byte)3);</p><p>You can use this to 
generate buildings and individual blocks programmatically by the use of 
algorithms. For example to generate a solid cube we could simply make an
 algorithm with three nested for loops.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> generateCube<span class="br0">(</span>Location loc, <span class="kw4">int</span> length<span class="br0">)</span><span class="br0">{</span>  <span class="co1">// public visible method generateCube() with 2 parameters point and location</span>
	World world <span class="sy0">=</span> loc.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	<span class="kw4">int</span> x_start <span class="sy0">=</span> loc.<span class="me1">getBlockX</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>     <span class="co1">// Set the startpoints to the coordinates of the given location</span>
	<span class="kw4">int</span> y_start <span class="sy0">=</span> loc.<span class="me1">getBlockY</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="kw4">int</span> z_start <span class="sy0">=</span> loc.<span class="me1">getBlockZ</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="coMULTI">/* Note: used getBlockX() instead of getX() because it returns an int value and avoid the cast with (int)loc.getX() */</span>
&nbsp;
	<span class="kw4">int</span> x_length <span class="sy0">=</span> x_start <span class="sy0">+</span> length<span class="sy0">;</span>    <span class="co1">// now i set the lengths for each dimension... should be clear.</span>
	<span class="kw4">int</span> y_length <span class="sy0">=</span> y_start <span class="sy0">+</span> length<span class="sy0">;</span>
	<span class="kw4">int</span> z_length <span class="sy0">=</span> z_start <span class="sy0">+</span> length<span class="sy0">;</span>
&nbsp;
	<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> x_operate <span class="sy0">=</span> x_start<span class="sy0">;</span> x_operate <span class="sy0">&lt;=</span> x_length<span class="sy0">;</span> x_operate<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span> 
		<span class="co1">// Loop 1 for the X-Dimension "for x_operate (which is set to x_start) </span>
		<span class="co1">//do whats inside the loop while x_operate is </span>
		<span class="co1">//&lt;= x_length and after each loop increase </span>
		<span class="co1">//x_operate by 1 (x_operate++ is the same as x_operate=x_operate+1;)</span>
		<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> y_operate <span class="sy0">=</span> y_start<span class="sy0">;</span> y_operate <span class="sy0">&lt;=</span> y_length<span class="sy0">;</span> y_operate<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span><span class="co1">// Loop 2 for the Y-Dimension</span>
			<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> z_operate <span class="sy0">=</span> z_start<span class="sy0">;</span> z_operate <span class="sy0">&lt;=</span> z_length<span class="sy0">;</span> z_operate<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span><span class="co1">// Loop 3 for the Z-Dimension</span>
&nbsp;
				Block blockToChange <span class="sy0">=</span> world.<span class="me1">getBlockAt</span><span class="br0">(</span>x_operate,y_operate,z_operate<span class="br0">)</span><span class="sy0">;</span> <span class="co1">// get the block with the current coordinates</span>
				blockToChange.<span class="me1">setTypeId</span><span class="br0">(</span><span class="nu0">34</span><span class="br0">)</span><span class="sy0">;</span>    <span class="co1">// set the block to Type 34</span>
			<span class="br0">}</span>
		<span class="br0">}</span>
	<span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>This method 
will construct a 3D cube or cuboid with the given length and starting 
point. As for deleting blocks simply follow the same method for creating
 them but set the ID to 0 (air).<br></p><blockquote></blockquote><h2><span class="mw-headline" id=".28Player.29_Inventory_Manipulation">(Player) Inventory Manipulation </span></h2><p>This
 section mostly covers player inventory manipulation, but the same 
applies to chest inventory manipulation as well if you find out how to 
get a chest's inventory&nbsp;:P. Here is a simple example of inventory 
manipulation:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> onPlayerJoin<span class="br0">(</span>PlayerJoinEvent evt<span class="br0">)</span> <span class="br0">{</span>
    Player player <span class="sy0">=</span> evt.<span class="me1">getPlayer</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">// The player who joined</span>
    PlayerInventory inventory <span class="sy0">=</span> player.<span class="me1">getInventory</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">// The player's inventory</span>
    ItemStack itemstack <span class="sy0">=</span> <span class="kw1">new</span> ItemStack<span class="br0">(</span>Material.<span class="me1">DIAMOND</span>, <span class="nu0">64</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">// A stack of diamonds</span>
&nbsp;
    <span class="kw1">if</span> <span class="br0">(</span>inventory.<span class="me1">contains</span><span class="br0">(</span>itemstack<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
        inventory.<span class="me1">addItem</span><span class="br0">(</span>itemstack<span class="br0">)</span><span class="sy0">;</span> <span class="co1">// Adds a stack of diamonds to the player's inventory</span>
        player.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Welcome! You seem to be reeeally rich, so we gave you some more diamonds!"</span><span class="br0">)</span><span class="sy0">;</span>
    <span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>So inside 
onPlayerJoin we first make a few variables to make our job easier: 
player, inventory and itemstack. Inventory is the player's inventory and
 itemstack is a ItemStack that has 64 diamonds. After that we check if 
the player's inventory contains a stack of diamonds. If the player has a
 stack of diamonds, we give him/her another stack with 
inventory.addItem(itemstack) and send a message. So inventory 
manipulation isn't actually that hard, if we wanted we could remove the 
stack of diamonds by simply replacing inventory.addItem(itemstack) with 
inventory.remove(itemstack) and change the message a little bit. 
Hopefully this helped!</p><h2><span class="mw-headline" id="Item_Manipulation">Item Manipulation </span></h2><p>When dealing with items in the code, you use the ItemStack class for looking up and setting all information on that stack.</p><h3><span class="mw-headline" id="Enchantments">Enchantments </span></h3><p>To enchant an item you must first know the <a href="http://www.minecraftwiki.net/wiki/Data_values" class="external text" rel="nofollow">Item Code</a> and the <a href="http://www.minecraftwiki.net/wiki/Talk:Enchanting#Effect_IDs" class="external text" rel="nofollow">Effect ID</a>.
 Enchantments themselves cannot be instantiated (new Enchantment() won't
 work) because they're abstract, so you must use an EnchantmentWrapper. 
You can not enchant items which are not normally enchantable, on SMP 
because bukkit servers aren't set up to send enchantment information on 
not enchantable items. So no fire sticks.</p><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw4">int</span> itemCode <span class="sy0">=</span> <span class="nu0">280</span><span class="sy0">;</span>  <span class="co1">//use the item code you want here</span>
<span class="kw4">int</span> effectId <span class="sy0">=</span> <span class="nu0">20</span><span class="sy0">;</span>  <span class="co1">//use the enchantment code you want here</span>
<span class="kw4">int</span> enchantmentLevel <span class="sy0">=</span> <span class="nu0">100</span><span class="sy0">;</span>
&nbsp;
ItemStack myItem <span class="sy0">=</span> <span class="kw1">new</span> ItemStack<span class="br0">(</span>itemCode<span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//new item of item code</span>
Enchantment myEnchantment <span class="sy0">=</span> <span class="kw1">new</span> EnchantmentWrapper<span class="br0">(</span>effectId<span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//new enchantment of effect id</span>
myItem.<span class="me1">addEnchantment</span><span class="br0">(</span>myEnchantment, enchantmentLevel<span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//enchant the item</span></pre></div></div><h2><span class="mw-headline" id="Maps.2C_and_Sets.2C_and_Lists.2C_Oh_My.21">Maps, and Sets, and Lists, Oh My! </span></h2><p>Besides
 the Map/HashMap classes, Java offers many other data structures. They 
offer these different classes because there are times when a Map is not 
the most appropriate. Here's a separate page for discussing <a href="http://wiki.bukkit.org/Java_data_structure_classes" title="Java data structure classes">Java data structure classes</a> in more detail.</p><h3><span class="mw-headline" id="HashMaps_and_How_to_Use_Them">HashMaps and How to Use Them </span></h3><p>When
 making a plugin you will get to a point where just using single 
variables to state an event has happened or a condition has been met 
will be insufficient, due to more than one player performing that 
action/event.</p><p>This was the problem I had with one of my old 
plugins, Zones, now improved and re-named to Regions. I was getting most
 of these errors because I didn't consider how the plugin would behave 
on an actual server with more than one on at any given time. I was using
 a single boolean variable to check whether players were in the region 
or not and obviously this wouldn't work as the values for each 
individual player need to be separate. So if one player was in a region 
and one was out the variable would constantly be changing which 
could/would/did cause numerous errors.</p><p>A hashmap is an excellent 
way of doing this. A hashmap is a way of mapping/assigning a value to a 
key. You could setup the hashmap so that the key is a player and the 
value could be anything you want, however the useful things with 
hashmaps is that one key can only contain one value and there can be no 
duplicate keys. So say for example I put "adam" as the key and assigned a
 value of "a" to it. That would work as intended, but then say 
afterwards I wanted to assign the value of "b" to key "adam" I would be 
able to and would get no errors but the value of "a" assigned to key 
"adam" in the hashmap would be overwritten because Hashmaps cannot 
contain duplicate values.</p><h4><span class="mw-headline" id="Defining_a_HashMap">Defining a HashMap </span></h4><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> Map<span class="sy0">&lt;</span><span class="kw3">Key</span>, DataType<span class="sy0">&gt;</span> HashMapName <span class="sy0">=</span> <span class="kw1">new</span> HashMap<span class="sy0">&lt;</span><span class="kw3">Key</span>, Datatype<span class="sy0">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//Example syntax</span>
&nbsp;
<span class="co1">//Example Declaration</span>
&nbsp;
<span class="kw1">public</span> Map<span class="sy0">&lt;</span>Player, Boolean<span class="sy0">&gt;</span> pluginEnabled <span class="sy0">=</span> <span class="kw1">new</span> HashMap<span class="sy0">&lt;</span>Player, Boolean<span class="sy0">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
<span class="kw1">public</span> Map<span class="sy0">&lt;</span>Player, Boolean<span class="sy0">&gt;</span> isGodMode <span class="sy0">=</span> <span class="kw1">new</span> HashMap<span class="sy0">&lt;</span>Player, Boolean<span class="sy0">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><p>Keep
 that code in mind because we will be using it for the rest of the 
tutorial on HashMaps. So, for example lets create a simple function 
which will toggle whether the plugin has been enabled or not. Firstly, 
inside your on command function which I explained earlier you will need 
to create a function to send the player name to the function and adjust 
the players state accordingly.</p><p>So inside on command you'll need 
this, the function name can be different but for the sake of simplicity 
it's best if you keep it the same.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1">Player player <span class="sy0">=</span> <span class="br0">(</span>Player<span class="br0">)</span> sender<span class="sy0">;</span>
togglePluginState<span class="br0">(</span>player<span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><p>This
 code above will cast the value of sender to player and pass that 
arguement to the function togglePluginState(). But now we need to create
 our togglePluginState() function.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> togglePluginState<span class="br0">(</span>Player player<span class="br0">)</span><span class="br0">{</span>
&nbsp;
    <span class="kw1">if</span><span class="br0">(</span>pluginEnabled.<span class="me1">containsKey</span><span class="br0">(</span>player<span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
        <span class="kw1">if</span><span class="br0">(</span>pluginEnabled.<span class="me1">get</span><span class="br0">(</span>player<span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
            pluginEnabled.<span class="me1">put</span><span class="br0">(</span>player, <span class="kw2">false</span><span class="br0">)</span><span class="sy0">;</span>
            player.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Plugin disabled"</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
            pluginEnabled.<span class="me1">put</span><span class="br0">(</span>player, <span class="kw2">true</span><span class="br0">)</span><span class="sy0">;</span>
            player.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Plugin enabled"</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="br0">}</span>
    <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
        pluginEnabled.<span class="me1">put</span><span class="br0">(</span>player, <span class="kw2">true</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//If you want plugin enabled by default change this value to false.</span>
        player.<span class="me1">sendMessage</span><span class="br0">(</span><span class="st0">"Plugin enabled"</span><span class="br0">)</span><span class="sy0">;</span>
    <span class="br0">}</span>
&nbsp;
<span class="br0">}</span></pre></div></div></blockquote><p>Now, what 
this code is doing is checking if the HashMap first contains the key 
player, so if it has been put into the hashap, if it is then we check 
the value of the HashMap key by get(player); if this is true then set 
value to false and send the player a message, else if the value is false
 then do the opposite, set the value to true and send a message again. 
But if the HashMap does not contain the key player then we can assume 
that this is their first run/use so we change the default value and add 
the player to the hashmap.</p><h4><span class="mw-headline" id="More_Ideas_for_HashMaps">More Ideas for HashMaps </span></h4><p>A HashMap (or really any kind of Map in Java) is an association. It allows quick and efficient lookup of some sort of <b>value</b>, given a unique <b>key</b>. Anywhere this happens in your code, a Map may be your solution.</p><p>Here
 are a few other ideas which are ideally suited to using Maps. As you 
will see, it doesn't have to be data that you store per player, but can 
be any kind of data that needs to be "translated" from one form to 
another.</p><h5><span class="mw-headline" id="Data_Value_Lookups">Data Value Lookups </span></h5><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> Map<span class="sy0">&lt;</span><span class="kw3">String</span>, Integer<span class="sy0">&gt;</span> wool_colors <span class="sy0">=</span> <span class="kw1">new</span> HashMap<span class="sy0">&lt;</span><span class="kw3">String</span>, Integer<span class="sy0">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// Run this on plugin startup (ideally reading from a file instead of copied out row by row):</span>
wool_colors.<span class="me1">put</span><span class="br0">(</span><span class="st0">"orange"</span>, <span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
wool_colors.<span class="me1">put</span><span class="br0">(</span><span class="st0">"magenta"</span>, <span class="nu0">2</span><span class="br0">)</span><span class="sy0">;</span>
wool_colors.<span class="me1">put</span><span class="br0">(</span><span class="st0">"light blue"</span>, <span class="nu0">3</span><span class="br0">)</span><span class="sy0">;</span>
   ..
<span class="me1">wool_colors</span>.<span class="me1">put</span><span class="br0">(</span><span class="st0">"black"</span>, <span class="nu0">15</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="co1">// Run this in response to user commands - turn "green" into 13</span>
<span class="kw4">int</span> datavalue <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="kw1">if</span> <span class="br0">(</span>wool_colors.<span class="me1">containsKey</span><span class="br0">(</span>argument<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
    datavalue <span class="sy0">=</span> wool_colors.<span class="me1">get</span><span class="br0">(</span>argument<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
    <span class="kw1">try</span> <span class="br0">{</span> datavalue <span class="sy0">=</span> <span class="kw3">Integer</span>.<span class="me1">parseInt</span><span class="br0">(</span>argument<span class="br0">)</span><span class="sy0">;</span> <span class="br0">}</span>
    <span class="kw1">catch</span> <span class="br0">(</span><span class="kw3">Exception</span> e<span class="br0">)</span> <span class="br0">{</span> <span class="sy0">;</span> <span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><h4><span class="mw-headline" id="Saving.2FLoading_a_HashMap">Saving/Loading a HashMap </span></h4><p>Once
 you know how to work with HashMaps, you probably want to know how to 
save and load the HashMap data. Saving and loading HashMap data is 
appropriate if</p><ul><li>you don't want an administrator to edit the data manually </li></ul><ul><li>you need to save data in binary format (too complex to organize for YAML) </li></ul><ul><li>you want to avoid parsing block names and/or other objects from freeform text </li></ul><p>This
 is very simple way how to save any HashMap. You can replace 
HashMap&lt;String, Integer&gt; with any type of HashMap you want. Let's 
continue using the "pluginEnabled" HashMap defined from the previous 
tutorial. This code saves the given HashMap to the file with given path.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">void</span> save<span class="br0">(</span>HashMap<span class="sy0">&lt;</span><span class="kw3">String</span>, Integer<span class="sy0">&gt;</span> map, <span class="kw3">String</span> path<span class="br0">)</span>
<span class="br0">{</span>
	<span class="kw1">try</span>
	<span class="br0">{</span>
		<span class="kw3">ObjectOutputStream</span> oos <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">ObjectOutputStream</span><span class="br0">(</span><span class="kw1">new</span> <span class="kw3">FileOutputStream</span><span class="br0">(</span>path<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">writeObject</span><span class="br0">(</span>map<span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">flush</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="co1">//Handle I/O exceptions</span>
	<span class="br0">}</span>
	<span class="kw1">catch</span><span class="br0">(</span><span class="kw3">Exception</span> e<span class="br0">)</span>
	<span class="br0">{</span>
		e.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="br0">}</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// ...</span>
&nbsp;
save<span class="br0">(</span>pluginEnabled, getDataFolder<span class="br0">(</span><span class="br0">)</span> <span class="sy0">+</span> <span class="kw3">File</span>.<span class="me1">separator</span> <span class="sy0">+</span> <span class="st0">"example.bin"</span><span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><p>You
 can see it's really easy. Loading works very very similar but we use 
ObjectInputStream instead of ObjectOutputStream ,FileInputStream instead
 of FileOutputStream,readObject() instead of writeObject() and we return
 the HashMap.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> HashMap<span class="sy0">&lt;</span><span class="kw3">String</span>, Integer<span class="sy0">&gt;</span> load<span class="br0">(</span><span class="kw3">String</span> path<span class="br0">)</span>
<span class="br0">{</span>
	<span class="kw1">try</span>
	<span class="br0">{</span>
		<span class="kw3">ObjectInputStream</span> ois <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">ObjectInputStream</span><span class="br0">(</span><span class="kw1">new</span> <span class="kw3">FileInputStream</span><span class="br0">(</span>path<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="kw3">Object</span> result <span class="sy0">=</span> ois.<span class="me1">readObject</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="co1">//you can feel free to cast result to HashMap&lt;String, Integer&gt; if you know there's that HashMap in the file</span>
		<span class="kw1">return</span> <span class="br0">(</span>HashMap<span class="sy0">&lt;</span><span class="kw3">String</span>, Integer<span class="sy0">&gt;</span><span class="br0">)</span>result<span class="sy0">;</span>
	<span class="br0">}</span>
	<span class="kw1">catch</span><span class="br0">(</span><span class="kw3">Exception</span> e<span class="br0">)</span>
	<span class="br0">{</span>
		e.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="br0">}</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">// ...</span>
&nbsp;
<span class="kw3">String</span> path <span class="sy0">=</span> getDataFolder<span class="br0">(</span><span class="br0">)</span> <span class="sy0">+</span> <span class="kw3">File</span>.<span class="me1">separator</span> <span class="sy0">+</span> <span class="st0">"example.bin"</span><span class="sy0">;</span>
<span class="kw3">File</span> file <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">File</span><span class="br0">(</span>path<span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">if</span><span class="br0">(</span>file.<span class="me1">exists</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="co1">// check if file exists before loading to avoid errors!</span>
	pluginEnabled  <span class="sy0">=</span> load<span class="br0">(</span>path<span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><p>You
 can use this "API" for saving/loading HashMaps, ArrayLists, Blocks, 
Players... and all Objects you know&nbsp;;) . Please credit Tomsik68(the
 author of this) if you use this in your plugin/other project.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="co3">/** SLAPI = Saving/Loading API
 * API for Saving and Loading Objects.
 * You can use this API in your projects, but please credit the original author of it.
 * @author Tomsik68&lt;tomsik68@gmail.com&gt;
 */</span>
<span class="kw1">public</span> <span class="kw1">class</span> SLAPI
<span class="br0">{</span>
	<span class="kw1">public</span> <span class="kw1">static</span> <span class="sy0">&lt;</span>T <span class="kw1">extends</span> Object<span class="sy0">&gt;</span> <span class="kw4">void</span> save<span class="br0">(</span>T obj,<span class="kw3">String</span> path<span class="br0">)</span> <span class="kw1">throws</span> <span class="kw3">Exception</span>
	<span class="br0">{</span>
		<span class="kw3">ObjectOutputStream</span> oos <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">ObjectOutputStream</span><span class="br0">(</span><span class="kw1">new</span> <span class="kw3">FileOutputStream</span><span class="br0">(</span>path<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">writeObject</span><span class="br0">(</span>obj<span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">flush</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		oos.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="br0">}</span>
	<span class="kw1">public</span> <span class="kw1">static</span> <span class="sy0">&lt;</span>T <span class="kw1">extends</span> Object<span class="sy0">&gt;</span> T load<span class="br0">(</span><span class="kw3">String</span> path<span class="br0">)</span> <span class="kw1">throws</span> <span class="kw3">Exception</span>
	<span class="br0">{</span>
		<span class="kw3">ObjectInputStream</span> ois <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">ObjectInputStream</span><span class="br0">(</span><span class="kw1">new</span> <span class="kw3">FileInputStream</span><span class="br0">(</span>path<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
		T result <span class="sy0">=</span> <span class="br0">(</span>T<span class="br0">)</span>ois.<span class="me1">readObject</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		ois.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="kw1">return</span> result<span class="sy0">;</span>
	<span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>Example implementation of this API: <b>I'm skipping some part of code in this source</b></p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw1">class</span> Example <span class="kw1">extends</span> JavaPlugin <span class="br0">{</span>
	<span class="kw1">private</span> ArrayList<span class="sy0">&lt;</span>Object<span class="sy0">&gt;</span> list <span class="sy0">=</span> <span class="kw1">new</span> ArrayList<span class="sy0">&lt;</span>Object<span class="sy0">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	<span class="kw1">public</span> <span class="kw4">void</span> onEnable<span class="br0">(</span><span class="br0">)</span>
	<span class="br0">{</span>
            <span class="kw1">try</span><span class="br0">{</span>
		list <span class="sy0">=</span> SLAPI.<span class="me1">load</span><span class="br0">(</span><span class="st0">"example.bin"</span><span class="br0">)</span><span class="sy0">;</span>
            <span class="br0">}</span><span class="kw1">catch</span><span class="br0">(</span><span class="kw3">Exception</span> e<span class="br0">)</span><span class="br0">{</span>
                <span class="co1">//handle the exception</span>
                e.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
            <span class="br0">}</span>
	<span class="br0">}</span>
	<span class="kw1">public</span> <span class="kw4">void</span> onDisable<span class="br0">(</span><span class="br0">)</span>
	<span class="br0">{</span>
            <span class="kw1">try</span><span class="br0">{</span>
		SLAPI.<span class="me1">save</span><span class="br0">(</span>list,<span class="st0">"example.bin"</span><span class="br0">)</span><span class="sy0">;</span>
            <span class="br0">}</span><span class="kw1">catch</span><span class="br0">(</span><span class="kw3">Exception</span> e<span class="br0">)</span><span class="br0">{</span>
                 e.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
            <span class="br0">}</span>
	<span class="br0">}</span>
<span class="br0">}</span></pre></div></div></blockquote><p>A minor note
 about this SLAPI and Java's ObjectOutputStream class. This will work 
un-modified if you are saving almost all well-known Java types like 
Integer, String, HashMap. This will work un-modified for some Bukkit 
types as well. If you're writing your own data object classes, and you 
may want to save their state using this technique, you should read up on
 Java's Serializable or Externalizable interface. The only difference 
between Externalizable and Serializable is, that Serializable 
automatically takes all of class's fields and tries to serialize them, 
while Externalizable allows you to define method for reading and writing
 the Object. It's easy to add to your code, and it will make your data 
persistent with very little work on your part. No more parsing!</p><h2><span class="mw-headline" id="Metadata">Metadata </span></h2><p>Bukkit
 is trying to make plugin development as easy as possible, so HashMaps 
with key of type Player, Entity, World or even a Block were replaced by 
Metadata. Metadata is some kind of alternative to HashMap. It allows you
 to add custom "fields" to Players, Entities, Worlds and Blocks. These 
things are all members of Metadatable class(check <a href="http://jd.bukkit.org/doxygen/de/d59/interfaceorg_1_1bukkit_1_1metadata_1_1MetadataValue.html#ab49975fe013a0626dd29d3b85c63a82f" class="external autonumber" rel="nofollow">[1]</a>)It
 works very simply. Everything what is Metadatable holds its own HashMap
 of Metadata which you have access to. That means, if you're for example
 creating economy plugin, you need a HashMap of Player and Float or 
Double. With Metadata, you don't have to! You just attach to player new 
metadata value, and that's it!<br></p><h3><span class="mw-headline" id="Why_to_use_Metadata">Why to use Metadata </span></h3><p>Metadata is all handled by Bukkit, what makes it very good alternative to HashMaps.</p><p>Metadata is saved and loaded automatically, so they also survive server restart!&nbsp;:)</p><h3><span class="mw-headline" id="Why_not_to_use_Metadata">Why not to use Metadata<br></span></h3><p>Not so easy getting of the value.<br></p><p>If you save big amount of data, like metadata for every block, the metadata file can be very big.</p><h3><span class="mw-headline" id="Getting_.26_Setting_Metadata">Getting &amp; Setting Metadata </span></h3><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="coMULTI">/* If you're having these methods in your plugin's main class (which extends JavaPlugin), you can remove parameters plugin from them,
 * and in the FixedMetadataValue constructor and getMetadata method, use "this" instead*/</span>
<span class="kw1">public</span> <span class="kw4">void</span> setMetadata<span class="br0">(</span>Player player, <span class="kw3">String</span> key, <span class="kw3">Object</span> value, Plugin plugin<span class="br0">)</span><span class="br0">{</span>
  player.<span class="me1">setMetadata</span><span class="br0">(</span>key,<span class="kw1">new</span> FixedMetadataValue<span class="br0">(</span>plugin,value<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
<span class="kw1">public</span> <span class="kw3">Object</span> getMetadata<span class="br0">(</span>Player player, <span class="kw3">String</span> key, Plugin plugin<span class="br0">)</span><span class="br0">{</span>
  List<span class="sy0">&lt;</span>MetadataValue<span class="sy0">&gt;</span> values <span class="sy0">=</span> player.<span class="me1">getMetadata</span><span class="br0">(</span>key<span class="br0">)</span><span class="sy0">;</span>  
  <span class="kw1">for</span><span class="br0">(</span>MetadataValue value <span class="sy0">:</span> values<span class="br0">)</span><span class="br0">{</span>
     <span class="kw1">if</span><span class="br0">(</span>value.<span class="me1">getOwningPlugin</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getDescription</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equals</span><span class="br0">(</span>plugin.<span class="me1">getDescription</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
        <span class="kw1">return</span> value.<span class="me1">value</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
     <span class="br0">}</span>
  <span class="br0">}</span>
<span class="br0">}</span></pre></div></div><p>Note: If you're 
manipulating with numbers, booleans or strings, use convenient method to
 get the result. For example, you can use asInt, asString or asBoolean 
instead of value to find out the value.</p><h2><span class="mw-headline" id="Databases">Databases </span></h2><p>Sometimes
 flat files aren't enough for what your looking to do, this is where 
databases come in. The most common database engines available on 
Linux/Mac/Windows machines typically run on some flavor of SQL 
(Structured Query Language).</p><p>Software offering SQL allow you to 
create databases with columns and header to identify to contents of each
 cell. Think of it as a spreadsheet on steroids, where every column you 
set up in your database can enforce rules to ensure integrity. Apart 
from being more organised than a simple custom data file, SQL provides 
faster access and better searching than flat files.</p><p>The SQL 
standard helps applications like Bukkit implement database storage for 
their data in a consistent way. Unfortunately, there's more than one 
SQL-ready database engine, and each has minor differences in how to 
configure and use it. Which one you choose may depend on your particular
 needs. (Some plugins even offer configurable options to connect to 
multiple database engines!)</p><h3><span class="mw-headline" id="SQLite">SQLite </span></h3><p>Alta189 has written a <a href="http://forums.bukkit.org/threads/lib-tut-mysql-sqlite-bukkit-drivers.33849/" class="external text" rel="nofollow">fantastic SQLite tutorial</a>
 which I suggest you watch if you're interested in using SQL in your 
plugins, included with the tutorials is a handy library you can download
 and import to make using SQL easier. Once you have watched these video 
tutorials I would suggest you go and learn some SQL syntax, it's very 
straightforward and shouldn't take you long to pick up. SQL Tutorials <a href="http://www.w3schools.com/sql/default.asp" class="external text" rel="nofollow">@W3Schools</a> and <a href="http://www.1keydata.com/sql/sql.html" class="external text" rel="nofollow">@1Keydata</a>.</p><p>SQLite
 is great for very simple databases, because there's no server concerns 
to set up. Just make a few calls to create a new database and table. 
It's easy to back up: just copy the whole database file in one go. 
SQLite is a little bit weaker at data integrity, flexibility in data 
types, and it may not be something you would want to trust for huge 
databases of millions of rows. But for a new plugin in development, it's
 often easiest and fastest to get the SQL basics squared away with 
SQLite, even if you "graduate" to a more server-class database engine 
later.</p><h3><span class="mw-headline" id="MySQL">MySQL </span></h3><p>Another
 popular SQL database engine is called MySQL. It is closer to 
server-grade than SQLite, where many popular companies or websites 
depend on it for millions of webpage hits every day. With that security 
comes a little bit steeper learning-curve, because MySQL has more 
tunable parameters and capabilities.</p><p>The coding for plugins 
accessing MySQL is mostly the same as tiny SQLite or mega-sized Oracle, 
with only small differences in syntax here or there. But the 
administration has room to grow. You may want to set up accounts and 
privileges inside your MySQL setup. You may want to set up SQL scripts 
that organize your backups and rollback to previous states.</p><h2><span class="mw-headline" id="Deploying_your_Plugin">Deploying your Plugin </span></h2><p>Once
 you have written your plugin, how do you get it from a collection of 
source files into a working jar file that can be installed on a server? 
First, set up a CraftBukkit server on your local machine. To do this, 
visit the wiki page on <a href="http://wiki.bukkit.org/Setting_up_a_server" class="external text" rel="nofollow">Setting up a server</a>.
 Next you have to export your plugin to a .jar so that you can run it on
 your new server. To do this in Eclipse, click File &gt;&nbsp;Export. In
 the window that pops up, under "Java", select "JAR&nbsp;file", and 
click next. You will see a window that looks like this:</p><p><a href="http://wiki.bukkit.org/File:Exportwindow.png" class="image" title="Eclipse export"><img alt="Eclipse export" src="Plugin_Tutorial-Dateien/Exportwindow.png" height="666" width="563"></a></p><p>On
 the left, make sure that your src folder is selected. On the right, the
 two files beginning with a decimal point are to do with Eclipse and are
 not important to your plugin, so deselect them. It is vital that 
plugin.yml is selected in order for your plugin to work. Export your JAR
 file to any destination you like, but make sure you know where it is.</p><p>The
 jar file you have exported should now be a working 
plugin!&nbsp;Assuming of course that there are no errors in your code or
 your plugin.yml file. You can now drop the jar file you have exported 
into your bukkit server's "plugins"&nbsp;folder, reload or relaunch the 
server, and test away! In order to connect to a server running locally 
on your computer, simply put "localhost"&nbsp;as the IP&nbsp;address of 
the server in Minecraft multiplayer. If you run into errors that you 
can't solve for yourself, try visiting the <a href="http://forums.bukkit.org/forums/plugin-development.5/" class="external text" rel="nofollow">plugin development forum</a>, asking in the <a href="http://wiki.bukkit.org/IRC" class="external text" rel="nofollow">bukkitdev IRC channel</a>, or re-reading this wiki. Once you have a useful working plugin, consider submitting your project to <a href="http://dev.bukkit.org/" class="external text" rel="nofollow">dev.bukkit</a> for consumption by the Bukkit community.</p><h2><span class="mw-headline" id="Tips_and_Tricks">Tips and Tricks </span></h2><h3><span class="mw-headline" id="Igniting_the_Player">Igniting the Player </span></h3><p>The CraftBukkit API is capable of a lot of cool stuff. Here are some code snippets for some nice effects!</p><p>How to set someone on fire, in the context of a command:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
    <span class="kw1">if</span><span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"ignite"</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
        Player s <span class="sy0">=</span> <span class="br0">(</span>Player<span class="br0">)</span>sender<span class="sy0">;</span>
        Player target <span class="sy0">=</span> s.<span class="me1">getServer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getPlayer</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">// Gets the player who was typed in the command.</span>
        <span class="co1">// For instance, if the command was "/ignite notch", then the player would be just "notch".</span>
        <span class="co1">// Note: The first argument starts with [0], not [1]. So arg[0] will get the player typed.</span>
        target.<span class="me1">setFireTicks</span><span class="br0">(</span><span class="nu0">10000</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
    <span class="br0">}</span>
    <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><p>So if a player ran a command like <b>/ignite Notch</b> then if the player "Notch" was online, Notch would be set on fire!</p><h3><span class="mw-headline" id="Killing_the_player">Killing the player </span></h3><p>To keep with the theme, here's a way to kill the player.</p><p>Use this for your onCommand method:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
    <span class="kw1">if</span><span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"KillPlayer"</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
        Player target <span class="sy0">=</span> sender.<span class="me1">getServer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getPlayer</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span>
        target.<span class="me1">setHealth</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span> 
    <span class="br0">}</span>
    <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div></blockquote><p>Here is an extension to that, that will kill the player with an explosion:</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw4">float</span> explosionPower <span class="sy0">=</span> 4F<span class="sy0">;</span> <span class="co1">//This is the explosion power - TNT explosions are 4F by default</span>
Player target <span class="sy0">=</span> sender.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getPlayer</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span>
target.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">createExplosion</span><span class="br0">(</span>target.<span class="me1">getLocation</span><span class="br0">(</span><span class="br0">)</span>, explosionPower<span class="br0">)</span><span class="sy0">;</span>
target.<span class="me1">setHealth</span><span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span></pre></div></div></blockquote><h3><span class="mw-headline" id="Creating_an_Explosion">Creating an Explosion </span></h3><p>This
 code produces the TNT/Creeper Visual and Audio effects. This is useful 
if you are cancelling the TNT explode event but still want the effects.</p><blockquote><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1">	<span class="kw1">public</span> <span class="kw4">void</span> onExplosionPrime<span class="br0">(</span>ExplosionPrimeEvent event<span class="br0">)</span><span class="br0">{</span>
&nbsp;
		<span class="kw3">Entity</span> entity <span class="sy0">=</span> event.<span class="me1">getEntity</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
		<span class="kw1">if</span> <span class="br0">(</span>entity <span class="kw1">instanceof</span> TNTPrimed<span class="br0">)</span><span class="br0">{</span>
			TNTPrimed tnt <span class="sy0">=</span> <span class="br0">(</span>TNTPrimed<span class="br0">)</span> entity<span class="sy0">;</span>
			event.<span class="me1">getEntity</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">createExplosion</span><span class="br0">(</span>tnt.<span class="me1">getLocation</span><span class="br0">(</span><span class="br0">)</span>, <span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
		<span class="br0">}</span>
	<span class="br0">}</span></pre></div></div></blockquote><h3><span class="mw-headline" id="Hiding_player_from_other_players">Hiding player from other players </span></h3><p>This
 will hide the command sender from specified player. Please note the 
command sender will only be hidden from specified player.</p><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1"><span class="kw1">public</span> <span class="kw4">boolean</span> onCommand<span class="br0">(</span>CommandSender sender, Command cmd, <span class="kw3">String</span> label, <span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span><span class="br0">{</span>
    <span class="kw1">if</span><span class="br0">(</span>cmd.<span class="me1">getName</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">equalsIgnoreCase</span><span class="br0">(</span><span class="st0">"HideMe"</span><span class="br0">)</span> <span class="sy0">&amp;&amp;</span> args.<span class="me1">length</span> <span class="sy0">==</span> <span class="nu0">1</span><span class="br0">)</span><span class="br0">{</span>
        Player s <span class="sy0">=</span> <span class="br0">(</span>Player<span class="br0">)</span>sender<span class="sy0">;</span> <span class="co1">//Gets the Sender</span>
        Player target <span class="sy0">=</span> sender.<span class="me1">getServer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getPlayer</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Gets the player who is supposed not to see the sender</span>
        target.<span class="me1">hidePlayer</span><span class="br0">(</span>s<span class="br0">)</span><span class="sy0">;</span>
        <span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
    <span class="br0">}</span>
    <span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
<span class="br0">}</span></pre></div></div><h3><span class="mw-headline" id="Striking_thunders_where_player_clicks">Striking thunders where player clicks </span></h3><p>If you click a block with fishing rod, thunder will hit the clicked block. It's a simple and funny trick.</p><div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="java source-java"><pre class="de1">@EventHandler
    <span class="kw1">public</span> <span class="kw4">void</span> onPlayerInteractBlock<span class="br0">(</span>PlayerInteractEvent evt<span class="br0">)</span><span class="br0">{</span>
        <span class="kw1">if</span><span class="br0">(</span>evt.<span class="me1">getPlayer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getItemInHand</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getTypeId</span><span class="br0">(</span><span class="br0">)</span> <span class="sy0">==</span> Material.<span class="me1">FISHING_ROD</span>.<span class="me1">getId</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="br0">{</span>
            <span class="co1">//maximal distance between player and thunder is 200 blocks</span>
            evt.<span class="me1">getPlayer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getWorld</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">strikeLightning</span><span class="br0">(</span>evt.<span class="me1">getPlayer</span><span class="br0">(</span><span class="br0">)</span>.<span class="me1">getTargetBlock</span><span class="br0">(</span><span class="kw2">null</span>, <span class="nu0">200</span><span class="br0">)</span>.<span class="me1">getLocation</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="br0">}</span>
    <span class="br0">}</span></pre></div></div><h2><span class="mw-headline" id="Request_Section">Request Section </span></h2><p><a href="http://forums.bukkit.org/forums/plugin-requests.13/" class="external free" rel="nofollow">http://forums.bukkit.org/forums/plugin-requests.13/</a></p><h2><span class="mw-headline" id="Example_Files_and_Templates">Example Files and Templates </span></h2><ul><li><a href="http://pastebin.com/wpeTPx7N" class="external text" rel="nofollow">Example.Java</a> </li></ul><ul><li><a href="http://pastebin.com/MTwaAVCT" class="external text" rel="nofollow">ExamplePlayerListener.Java</a> </li></ul><ul><li><a href="http://pastebin.com/6FLixfH3" class="external text" rel="nofollow">ExampleBlockListener.Java</a> </li></ul><ul><li><a href="http://pastebin.com/8UZ6pkWC" class="external text" rel="nofollow">ExampleEntityListener.Java</a> </li></ul><ul><li><a href="https://github.com/SagaciousZed/SampleBukkitPlugin" class="external text" rel="nofollow">Sample plugin repository on Github</a> </li></ul><p><br>If you have any more questions on this matter, don't hesitate to contact <a href="http://forums.bukkit.org/members/adamki11s.42417/" class="external text" rel="nofollow">Adamki11s</a> or anyone on the BukkitDev <a href="http://wiki.bukkit.org/IRC" title="IRC">IRC</a> channel</p><table class="nmbox" style="border:1px solid #AAAAAA; border-collapse:collapse; clear:both; font-size:85%; margin: 0.25em 0; width:100%;"><tbody><tr style="background: #EEF3E2"><th class="mbox-image" style="width:50px; white-space: nowrap; padding: 4px 1em; border-right: 1px solid #aaaaaa;">Language</th><td class="mbox-text" style="background: #F6F9ED;">&nbsp;&nbsp;<a href="http://wiki.bukkit.org/HUGE_Plugin_Tutorial" title="HUGE Plugin Tutorial" class="mw-redirect">English</a> • <a href="http://wiki.bukkit.org/HUGE_Plugin_Tutorial/de" title="HUGE Plugin Tutorial/de">Deutsch</a> • <a href="http://wiki.bukkit.org/HUGE_Plugin_Tutorial/fr" title="HUGE Plugin Tutorial/fr" class="mw-redirect">Français</a> • <a href="http://wiki.bukkit.org/HUGE_Plugin_Tutorial/ru" title="HUGE Plugin Tutorial/ru">Русский</a> • <a href="http://wiki.bukkit.org/index.php?title=HUGE_Plugin_Tutorial/by&amp;action=edit&amp;redlink=1" class="new" title="HUGE Plugin Tutorial/by (page does not exist)">Беларускі</a> • <a href="http://wiki.bukkit.org/index.php?title=HUGE_Plugin_Tutorial/fi&amp;action=edit&amp;redlink=1" class="new" title="HUGE Plugin Tutorial/fi (page does not exist)">Suomi</a> • <a href="http://wiki.bukkit.org/index.php?title=HUGE_Plugin_Tutorial/no&amp;action=edit&amp;redlink=1" class="new" title="HUGE Plugin Tutorial/no (page does not exist)">‪Norsk (bokmål)‬</a> • <a href="http://wiki.bukkit.org/index.php?title=HUGE_Plugin_Tutorial/it&amp;action=edit&amp;redlink=1" class="new" title="HUGE Plugin Tutorial/it (page does not exist)">Italiano</a></td></tr></tbody></table><!--//--><div class="printfooter">Retrieved from "<a href="http://wiki.bukkit.org/Plugin_Tutorial">http://wiki.bukkit.org/Plugin_Tutorial</a>"</div><div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://wiki.bukkit.org/Special:Categories" title="Special:Categories">Category</a>: <span dir="ltr"><a href="http://wiki.bukkit.org/Category:Tutorials" title="Category:Tutorials">Tutorials</a></span></div></div><div class="visualClear"></div></div></div><div id="mw-head" class="noprint"><div id="p-personal" class=""><h5>Personal tools</h5><ul><li id="pt-login"><a href="http://wiki.bukkit.org/index.php?title=Special:UserLogin&amp;returnto=Plugin_Tutorial" title="You are encouraged to log in; however, it is not mandatory [alt-o]" accesskey="o">Log in / create account</a></li></ul></div><div id="left-navigation"><div id="p-namespaces" class="vectorTabs"><h5>Namespaces</h5><ul><li id="ca-nstab-main" class="selected"><a href="http://wiki.bukkit.org/Plugin_Tutorial" title="View the content page [alt-c]" accesskey="c"><span>Page</span></a></li> <li id="ca-talk"><a href="http://wiki.bukkit.org/Talk:Plugin_Tutorial" title="Discussion about the content page [alt-t]" accesskey="t"><span>Discussion</span></a></li></ul></div><div id="p-variants" class="vectorMenu emptyPortlet"><h5><span>Variants</span><a href="#"></a></h5><div class="menu"><ul></ul></div></div></div><div id="right-navigation"><div id="p-views" class="vectorTabs"><h5>Views</h5><ul><li id="ca-view" class="selected"><a href="http://wiki.bukkit.org/Plugin_Tutorial"><span>Read</span></a></li> <li id="ca-viewsource"><a href="http://wiki.bukkit.org/index.php?title=Plugin_Tutorial&amp;action=edit" title="This page is protected.
You can view its source [alt-e]" accesskey="e"><span>View source</span></a></li> <li id="ca-history" class="collapsible "><a href="http://wiki.bukkit.org/index.php?title=Plugin_Tutorial&amp;action=history" title="Past revisions of this page [alt-h]" accesskey="h"><span>View history</span></a></li></ul></div><div id="p-cactions" class="vectorMenu emptyPortlet"><h5><span>Actions</span><a href="#"></a></h5><div class="menu"><ul></ul></div></div><div id="p-search"><h5><label for="searchInput">Search</label></h5><form action="/index.php" id="searchform"><input name="title" value="Special:Search" type="hidden"> <input id="searchInput" name="search" title="Search BukkitWiki [alt-f]" accesskey="f" type="text"> <input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if exists" type="submit"> <input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" type="submit"></form></div></div></div><div id="mw-panel" class="noprint"><div id="p-logo"><a style="background-image: url(/logo.png);" href="http://wiki.bukkit.org/Main_Page" title="Visit the main page"></a></div><div class="portal" id="p-Wiki"><h5>Wiki</h5><div class="body"><ul><li id="n-mainpage-description"><a href="http://wiki.bukkit.org/Main_Page" title="Visit the main page [alt-z]" accesskey="z">Main page</a></li> <li id="n-recentchanges"><a href="http://wiki.bukkit.org/Special:RecentChanges" title="The list of recent changes in the wiki [alt-r]" accesskey="r">Recent changes</a></li> <li id="n-randompage"><a href="http://wiki.bukkit.org/Special:Random" title="Load a random page [alt-x]" accesskey="x">Random page</a></li> <li id="n-Wiki-Issue-Tracker"><a href="https://bukkit.atlassian.net/browse/WIKI">Wiki Issue Tracker</a></li> <li id="n-help"><a href="http://wiki.bukkit.org/Help:Contents" title="The place to find out">Help</a></li></ul></div></div><div class="portal" id="p-Community"><h5>Community</h5><div class="body"><ul><li id="n-Bukkit-Website"><a href="http://www.bukkit.org/">Bukkit Website</a></li> <li id="n-Bukkit-Forums"><a href="http://forums.bukkit.org/">Bukkit Forums</a></li> <li id="n-BukkitDev"><a href="http://dev.bukkit.org/">BukkitDev</a></li> <li id="n-Bukkit-DL"><a href="http://dl.bukkit.org/">Bukkit DL</a></li> <li id="n-Minecraft-Website"><a href="http://minecraft.net/">Minecraft Website</a></li> <li id="n-Minecraft-Wiki"><a href="http://www.minecraftwiki.net/">Minecraft Wiki</a></li></ul></div></div><div class="portal" id="p-tb"><h5>Toolbox</h5><div class="body"><ul><li id="t-whatlinkshere"><a href="http://wiki.bukkit.org/Special:WhatLinksHere/Plugin_Tutorial" title="List of all wiki pages that link here [alt-j]" accesskey="j">What links here</a></li> <li id="t-recentchangeslinked"><a href="http://wiki.bukkit.org/Special:RecentChangesLinked/Plugin_Tutorial" title="Recent changes in pages linked from this page [alt-k]" accesskey="k">Related changes</a></li> <li id="t-specialpages"><a href="http://wiki.bukkit.org/Special:SpecialPages" title="List of all special pages [alt-q]" accesskey="q">Special pages</a></li> <li id="t-print"><a href="http://wiki.bukkit.org/index.php?title=Plugin_Tutorial&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-p]" accesskey="p">Printable version</a></li> <li id="t-permalink"><a href="http://wiki.bukkit.org/index.php?title=Plugin_Tutorial&amp;oldid=6787" title="Permanent link to this revision of the page">Permanent link</a></li></ul></div></div></div><div id="footer"><ul id="footer-info"><li id="footer-info-lastmod">This page was last modified on 1 September 2012, at 13:05.</li> <li id="footer-info-viewcount">This page has been accessed 302,828 times.</li></ul><ul id="footer-places"><li id="footer-places-privacy"><a href="http://wiki.bukkit.org/BukkitWiki:Privacy_policy" title="BukkitWiki:Privacy policy">Privacy policy</a></li> <li id="footer-places-about"><a href="http://wiki.bukkit.org/BukkitWiki:About" title="BukkitWiki:About">About BukkitWiki</a></li> <li id="footer-places-disclaimer"><a href="http://wiki.bukkit.org/BukkitWiki:General_disclaimer" title="BukkitWiki:General disclaimer">Disclaimers</a></li></ul><ul id="footer-icons" class="noprint"><li id="footer-icon-poweredby"><a href="http://www.mediawiki.org/"><img src="Plugin_Tutorial-Dateien/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a></li></ul><div style="clear:both"></div></div><script type="text/javascript">var _gaq = _gaq || [];
_gaq.push(
    ['_setAccount', 'UA-1045810-67'],
    ['_setDomainName', 'bukkit.org'],
    ['_addIgnoredRef', 'bukkit.org'],
    ['_trackPageview'],
    ['b._setAccount', 'UA-1045810-22'],
    ['b._setDomainName', 'bukkit.org'],
    ['b._addIgnoredRef', 'bukkit.org'],
    ['b._trackPageview'],
    ['c._setAccount', 'UA-20541082-1'], 
    ['c._trackPageview']
);
(function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> <!--//--><script type="text/javascript">var _qevents = _qevents || [];
(function() {
   var elem = document.createElement('script');
   elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
   elem.async = true;
   elem.type = "text/javascript";
   var scpt = document.getElementsByTagName('script')[0];
   scpt.parentNode.insertBefore(elem, scpt);
})();
_qevents.push({qacct: "p-d2K9aGgyU-tIA"});
</script> <noscript>
   <div style="display:none;"><img src="//pixel.quantserve.com/pixel/p-d2K9aGgyU-tIA.gif" border="0" height="1" width="1" alt="Quantcast" /></div>
</noscript><!--//--><script>
var _comscore = _comscore || [];
_comscore.push({ c1: "2", c2: "6035118" });
(function() {
   var s = document.createElement("script"), el = document.getElementsByTagName("script")[0]; s.async = true;
   s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js";
   el.parentNode.insertBefore(s, el);
})();
</script> <noscript>
   <img src="http://b.scorecardresearch.com/p?c1=2&amp;c2=6035118&amp;cv=2.0&amp;cj=1" />
</noscript><!--//--><script type="text/javascript">(function () {
   var d = new Image(1, 1);
   d.onerror = d.onload = function () {
       d.onerror = d.onload = null;
   };
   d.src = ["//secure-us.imrworldwide.com/cgi-bin/m?ci=us-603339h&cg=0&cc=1&si=", escape(window.location.href), "&rp=", escape(document.referrer), "&ts=compact&rnd=", (new Date()).getTime()].join('');
})();
</script> <noscript>
   <div><img src="//secure-us.imrworldwide.com/cgi-bin/m?ci=us-603339h&amp;cg=0&amp;cc=1&amp;ts=noscript" width="1" height="1" alt="" /></div>
</noscript><!--//--><script type="text/javascript"><!--
var IVW="http://cursecom.ivwbox.de/cgi-bin/ivw/CP/Curse_D1142-Bukkit-Docs;Kommentar";
document.write("<img src=\""+IVW+"?r="+escape(document.referrer)+"&d="+(Math.random()*100000)+"\" width=\"1\" height=\"1\" alt=\"szmtag\" />");
//-->
</script><img src="Plugin_Tutorial-Dateien/Curse_D1142-Bukkit-Docs.gif" alt="szmtag" height="1" width="1"> <noscript>
<img src="http://cursecom.ivwbox.de/cgi-bin/ivw/CP/Curse_D1142-Bukkit-Docs;Kommentar" width="1" height="1" alt="szmtag" />
</noscript><!--//--><script type="text/javascript">if ( window.isMSIE55 ) fixalpha(); </script> <!--//--><script>if (window.runOnloadHook) runOnloadHook();</script> <!--//--><div id="netbar" class="t-netbar u-icon u-icon-z"><div class="t-netbar-curseInfo"><ul class="t-netbar-discover t-netbar-section" role="directory"><li style="z-index: 9998;"><a href="#" class="t-netbar-label">Curse Sites <i class="u-icon-dropDown"></i></a><ul><li><a href="http://www.curse.com/"><i class="u-icon-curse"></i>Curse.com</a></li> <li><a href="http://www.mmo-champion.com/"><i class="u-icon-mmoc"></i>MMO-Champion</a></li> <li><a href="http://www.wowstead.com/"><i class="u-icon-wowstead"></i>Wowstead</a></li> <li><a href="http://www.arenajunkies.com/"><i class="u-icon-arenajunkies"></i>Arena Junkies</a></li> <li><a href="http://www.minecraftforums.net/"><i class="u-icon-minecraftforums"></i>Minecraft Forums</a></li> <li><a href="http://www.darthhater.com/"><i class="u-icon-darthhater"></i>Darth Hater</a></li> <li><a href="http://www.diablofans.com/"><i class="u-icon-diablofans"></i>DiabloFans</a></li> <li><a href="http://www.terrariaonline.com/"><i class="u-icon-terraria"></i>Terraria Online</a></li> <li><a href="http://www.minecraftwiki.net/"><i class="u-icon-minecraftwiki"></i>Minecraft Wiki</a></li> <li><a href="http://www.bukkit.org/"><i class="u-icon-bukkit"></i>Bukkit</a></li></ul></li></ul></div><a href="http://www.curse.com/premium/plan" class="promotions" role="alert">Become a Premium Member!</a></div></body></html>